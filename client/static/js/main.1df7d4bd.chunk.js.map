{"version":3,"sources":["pages/Home/Home.js","pages/Profile/Profile.js","components/ReviewSection/ReviewSection.js","pages/ServiceDetails/ServiceDetails.js","config.js","components/Header/Header.js","services/providerService.js","pages/FinancialServices/FinancialServices.js","pages/ApplianceServices/ApplianceServices.js","pages/CleaningServices/CleaningServices.js","pages/UtilitiesServices/UtilitiesServices.js","pages/RepairServices/RepairServices.js","pages/OutdoorServices/OutdoorServices.js","pages/MovingServices/MovingServices.js","App.js","index.js"],"names":["Home","providers","setProviders","useState","loading","setLoading","navigate","useNavigate","useEffect","fetch","then","res","json","data","catch","err","console","error","React","createElement","className","onClick","handleScroll","window","scrollTo","top","innerHeight","behavior","Fragment","Profile","userData","setUserData","isLoading","setIsLoading","email","setEmail","name","setName","connections","setConnections","recommendations","setRecommendations","fetchAllData","async","userEmail","localStorage","getItem","userResponse","method","headers","body","JSON","stringify","ok","connectionsResponse","connectionsData","recommendationsResponse","recommendationsData","handleLogin","addEventListener","removeEventListener","length","map","rec","index","key","business_name","service_type","credentials","connection","connected_at","handleLogout","removeItem","ReviewSection","_ref","providerId","reviews","setReviews","newReview","setNewReview","rating","content","concat","onSubmit","e","preventDefault","review","num","type","_objectSpread","value","onChange","target","placeholder","required","id","src","user","profile_image","alt","repeat","Date","created_at","toLocaleDateString","ServiceDetails","useParams","provider","setProvider","category","average_rating","total_reviews","trust_score","description","env","process","log","BACKEND_URL","Header","showLoginModal","setShowLoginModal","showAddRecommendationModal","setShowAddRecommendationModal","emailError","setEmailError","showServicesDropdown","setShowServicesDropdown","closeTimeout","setCloseTimeout","isLoggedIn","recommendationForm","setRecommendationForm","phone_number","subcategory","notes","user_email","categories","backend","handleMouseEnter","clearTimeout","handleMouseLeave","timeout","setTimeout","Link","to","onMouseEnter","onMouseLeave","stopPropagation","response","Error","message","exists","sessionResponse","sessionData","setItem","token","dispatchEvent","Event","Object","keys","sub","API_URL","ReviewModal","isOpen","onClose","setRating","hover","setHover","setReview","setError","Array","_","FaStar","rows","FinancialServices","setCategories","selectedCategory","setSelectedCategory","isReviewModalOpen","setIsReviewModalOpen","selectedProvider","setSelectedProvider","likedProviders","setLikedProviders","Set","isCommentModalOpen","setIsCommentModalOpen","mode","status","fetchProviders","likesResponse","likedData","like","provider_id","uniqueCategories","getProviders","filteredProviders","filter","_provider$phone_numbe","_provider$email","trim","FaPhone","size","phoneNumber","location","href","title","FaEnvelope","role","recommended_by_name","reviewData","provider_email","providerEmail","handleReviewSubmit","ApplianceServices","CleaningServices","cleaningProviders","fetchCleaningProviders","UtilitiesServices","utilitiesProviders","fetchUtilitiesProviders","toLowerCase","includes","RepairServices","repairProviders","fetchRepairProviders","OutdoorServices","outdoorProviders","fetchOutdoorProviders","MovingServices","movingProviders","fetchMovingProviders","App","Router","Routes","Route","path","element","createRoot","document","getElementById","render","StrictMode"],"mappings":"icA2EeA,MAtEFA,KACX,MAAOC,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,GACjCG,EAAWC,cAEjBC,oBAAU,KACRC,MAAM,uCACHC,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJX,EAAaW,EAAKZ,WAClBI,GAAW,KAEZS,MAAMC,IACLC,QAAQC,MAAM,4BAA6BF,GAC3CV,GAAW,MAEd,IASH,OACEa,IAAAC,cAAA,OAAKC,UAAU,QACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,OAAKC,UAAU,cACbF,IAAAC,cAAA,MAAIC,UAAU,mBAAkB,sCAChCF,IAAAC,cAAA,KAAGC,UAAU,sBAAqB,kEAClCF,IAAAC,cAAA,OAAKC,UAAU,mBAAmBC,QAbrBC,KACnBC,OAAOC,SAAS,CACdC,IAAKF,OAAOG,YACZC,SAAU,aAWJT,IAAAC,cAAA,QAAMC,UAAU,YAIpBF,IAAAC,cAAA,OAAKC,UAAU,qBACZhB,EACCc,IAAAC,cAAA,OAAKC,UAAU,WAEfF,IAAAC,cAAAD,IAAAU,SAAA,KACEV,IAAAC,cAAA,OACEC,UAAU,eACVC,QAASA,IAAMf,EAAS,mBAExBY,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,iBACJD,IAAAC,cAAA,SAAG,4CAELD,IAAAC,cAAA,OAAKC,UAAU,kBAGjBF,IAAAC,cAAA,OACEC,UAAU,eACVC,QAASA,IAAMf,EAAS,wBAExBY,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,sBACJD,IAAAC,cAAA,SAAG,4CAELD,IAAAC,cAAA,OAAKC,UAAU,uB,MC2HhBS,MAvLCA,KACd,MAAMvB,EAAWC,eACVuB,EAAUC,GAAe5B,mBAAS,OAClC6B,EAAWC,GAAgB9B,oBAAS,IACpC+B,EAAOC,GAAYhC,mBAAS,WAC5BiC,EAAMC,GAAWlC,mBAAS,WAC1BmC,EAAaC,GAAkBpC,mBAAS,KACxCqC,EAAiBC,GAAsBtC,mBAAS,IAEjDuC,EAAeC,UACnB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKF,EAKL,IAEE,MAAMG,QAAqBtC,MAAM,6CAA8C,CAC7EuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,MAAOU,MAGhC,GAAIG,EAAaM,GAAI,CACnB,MAAMvB,QAAiBiB,EAAanC,OACpCyB,EAAQP,EAASM,MAAQ,UACzBL,EAAYD,GACZK,EAASL,EAASI,OAAS,UAI7B,MAAMoB,QAA4B7C,MAAM,0DAA2D,CACjGuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,MAAOU,MAGhC,GAAIU,EAAoBD,GAAI,CAC1B,MAAME,QAAwBD,EAAoB1C,OAClD2B,EAAegB,GAIjB,MAAMC,QAAgC/C,MAAM,2DAA4D,CACtGuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,MAAOU,MAGhC,GAAIY,EAAwBH,GAAI,CAC9B,MAAMI,QAA4BD,EAAwB5C,OAC1D6B,EAAmBgB,IAErB,MAAOxC,GACPD,QAAQC,MAAM,uBAAwBA,GACvC,QACCgB,GAAa,QAnDbA,GAAa,IAqFjB,OAdAzB,oBAAU,KACRkC,IAEA,MAAMgB,EAAcA,KAClBzB,GAAa,GACbS,KAIF,OADAnB,OAAOoC,iBAAiB,YAAaD,GAC9B,KACLnC,OAAOqC,oBAAoB,YAAaF,KAEzC,CAACpD,IAEA0B,EACKd,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cAIxCF,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,YACFW,GAAYZ,IAAAC,cAAA,KAAGC,UAAU,gBAAe,4CAG5CF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,wBACJD,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,aAAO,QACPD,IAAAC,cAAA,OAAKC,UAAU,cAAcgB,IAE/BlB,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,aAAO,SACPD,IAAAC,cAAA,OAAKC,UAAU,cAAcc,MAKnChB,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,mBACJD,IAAAC,cAAA,OAAKC,UAAU,wBACZoB,EAAgBqB,OAAS,EACxBrB,EAAgBsB,IAAI,CAACC,EAAKC,IACxB9C,IAAAC,cAAA,OAAK8C,IAAKD,EAAO5C,UAAU,uBACzBF,IAAAC,cAAA,MAAIC,UAAU,iBAAiB2C,EAAIG,eACnChD,IAAAC,cAAA,OAAKC,UAAU,eAAe2C,EAAII,cAClCjD,IAAAC,cAAA,OAAKC,UAAU,eAAe2C,EAAIK,aAClClD,IAAAC,cAAA,UAAQC,UAAU,kBAAiB,sBAIvCF,IAAAC,cAAA,OAAKC,UAAU,8BAA6B,iCAOlDF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,UAAI,yBACJD,IAAAC,cAAA,OAAKC,UAAU,qBACbF,IAAAC,cAAA,aACED,IAAAC,cAAA,aACED,IAAAC,cAAA,UACED,IAAAC,cAAA,UAAI,QACJD,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UAAI,qBAGRD,IAAAC,cAAA,aACGmB,EAAYuB,OAAS,EACpBvB,EAAYwB,IAAKO,GACfnD,IAAAC,cAAA,MAAI8C,IAAKI,EAAWnC,OAClBhB,IAAAC,cAAA,UAAKkD,EAAWjC,MAChBlB,IAAAC,cAAA,UAAKkD,EAAWnC,OAChBhB,IAAAC,cAAA,UAAKkD,EAAWC,gBAIpBpD,IAAAC,cAAA,UACED,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,UACjCF,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,UACjCF,IAAAC,cAAA,MAAIC,UAAU,oBAAmB,eAQ7CF,IAAAC,cAAA,UAAQC,UAAU,gBAAgBC,QA5GnBkD,KAEnBxC,EAAY,MACZI,EAAS,UACTE,EAAQ,UACRE,EAAe,IACfE,EAAmB,IAGnBI,aAAa2B,WAAW,aACxB3B,aAAa2B,WAAW,SAGxBlE,EAAS,OA+FoD,a,aC1FlDmE,MAvFOC,IAAqB,IAApB,WAAEC,GAAYD,EACnC,MAAOE,EAASC,GAAc1E,mBAAS,KAChC2E,EAAWC,GAAgB5E,mBAAS,CAAE6E,OAAQ,EAAGC,QAAS,KAEjEzE,oBAAU,KAERC,MAAM,uCAADyE,OAAwCP,EAAU,aACpDjE,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,GAAQgE,EAAWhE,EAAK+D,UAC7B9D,MAAMC,GAAOC,QAAQC,MAAM,0BAA2BF,KACxD,CAAC4D,IAoBJ,OACEzD,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAA,UAAI,WAEJD,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,kBACJD,IAAAC,cAAA,QAAMgE,SAxBgBC,IAC1BA,EAAEC,iBAEF5E,MAAM,uCAADyE,OAAwCP,EAAU,YAAY,CACjE3B,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU0B,KAEpBpE,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJgE,EAAW,IAAID,EAAS/D,EAAKyE,SAC7BP,EAAa,CAAEC,OAAQ,EAAGC,QAAS,OAEpCnE,MAAMC,GAAOC,QAAQC,MAAM,wBAAyBF,MAUjDG,IAAAC,cAAA,OAAKC,UAAU,iBACZ,CAAC,EAAE,EAAE,EAAE,EAAE,GAAG0C,IAAIyB,GACfrE,IAAAC,cAAA,UACE8C,IAAKsB,EACLC,KAAK,SACLpE,UAAS,eAAA8D,OAAiBJ,EAAUE,QAAUO,EAAM,SAAW,IAC/DlE,QAASA,IAAM0D,EAAYU,wBAAC,GAAIX,GAAS,IAAEE,OAAQO,MACpD,YAKLrE,IAAAC,cAAA,YACEuE,MAAOZ,EAAUG,QACjBU,SAAWP,GAAML,EAAYU,wBAAC,GAAIX,GAAS,IAAEG,QAASG,EAAEQ,OAAOF,SAC/DG,YAAY,2BACZC,UAAQ,IAEV5E,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,iBAIpDF,IAAAC,cAAA,OAAKC,UAAU,gBACZwD,EAAQd,IAAIwB,GACXpE,IAAAC,cAAA,OAAK8C,IAAKqB,EAAOS,GAAI3E,UAAU,eAC7BF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OACE6E,IAAKV,EAAOW,KAAKC,eAAiB,sBAClCC,IAAKb,EAAOW,KAAK7D,KACjBhB,UAAU,mBAEZF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAKmE,EAAOW,KAAK7D,MACjBlB,IAAAC,cAAA,OAAKC,UAAU,iBACZ,SAAIgF,OAAOd,EAAON,QAClB,SAAIoB,OAAO,EAAEd,EAAON,UAGzB9D,IAAAC,cAAA,OAAKC,UAAU,eACZ,IAAIiF,KAAKf,EAAOgB,YAAYC,uBAGjCrF,IAAAC,cAAA,KAAGC,UAAU,kBAAkBkE,EAAOL,c,MCfnCuB,MA9DQA,KACrB,MAAM,GAAET,GAAOU,eACRC,EAAUC,GAAexG,mBAAS,OAClCC,EAASC,GAAcF,oBAAS,GAevC,OAbAK,oBAAU,KACRC,MAAM,uCAADyE,OAAwCa,IAC1CrF,KAAKC,GAAOA,EAAIC,QAChBF,KAAKG,IACJ8F,EAAY9F,EAAK6F,UACjBrG,GAAW,KAEZS,MAAMC,IACLC,QAAQC,MAAM,mCAAoCF,GAClDV,GAAW,MAEd,CAAC0F,IAEA3F,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,WAAU,cACxCsF,EAGHxF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,0BACbF,IAAAC,cAAA,UAAKuF,EAASxC,eACdhD,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,QAAMC,UAAU,YAAYsF,EAASE,UACrC1F,IAAAC,cAAA,QAAMC,UAAU,UAAS,UAAGsF,EAASG,gBACrC3F,IAAAC,cAAA,QAAMC,UAAU,WAAU,IAAEsF,EAASI,cAAc,cAErD5F,IAAAC,cAAA,OAAKC,UAAU,eAAc,gBACbsF,EAASK,gBAM/B7F,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,WAASC,UAAU,iBACjBF,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,SAAIuF,EAASM,cAGf9F,IAAAC,cAACsD,EAAa,CAACE,WAAYoB,KAG7B7E,IAAAC,cAAA,OAAKC,UAAU,WACbF,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,UAAI,uBACJD,IAAAC,cAAA,UAAQC,UAAU,kBAAiB,yBAlCzBF,IAAAC,cAAA,WAAK,uB,MCxB7B,MAAM8F,EAAMC,aACZlG,QAAQmG,IAAI,sBAAuBF,GACnCjG,QAAQmG,IAAI,oBAAqB,UAMjC,MAAMC,EAAc,0CAEpBpG,QAAQmG,IAAI,yBAA0BD,cACtClG,QAAQmG,IAAI,yBAA0BC,GAEvBA,QCiTAC,MAzTAA,KAYb,MAAM/G,EAAWC,eACV+G,EAAgBC,GAAqBpH,oBAAS,IAC9CqH,EAA4BC,GAAiCtH,oBAAS,IACtE+B,EAAOC,GAAYhC,mBAAS,KAC5BuH,EAAYC,GAAiBxH,mBAAS,KACtCyH,EAAsBC,GAA2B1H,oBAAS,IAC1D2H,EAAcC,GAAmB5H,mBAAS,MAC3C6H,EAAanF,aAAaC,QAAQ,cACjCmF,EAAoBC,GAAyB/H,mBAAS,CAC3D+D,cAAe,GACfhC,MAAO,GACPiG,aAAc,GACdvB,SAAU,GACVwB,YAAa,GACbpB,YAAa,GACbqB,MAAO,GACPC,WAAYzF,aAAaC,QAAQ,cAAgB,KAG7CyF,EAAa,CACjB,gBAAiB,CACf,CAAEnG,KAAM,aAAcoG,QAAS,sBAC/B,CAAEpG,KAAM,WAAYoG,QAAS,uBAC7B,CAAEpG,KAAM,YAAaoG,QAAS,aAC9B,CAAEpG,KAAM,UAAWoG,QAAS,sBAC5B,CAAEpG,KAAM,UAAWoG,QAAS,oBAC5B,CAAEpG,KAAM,kBAAmBoG,QAAS,oBAEtC,qBAAsB,CACpB,CAAEpG,KAAM,kBAAmBoG,QAAS,mBACpC,CAAEpG,KAAM,qBAAsBoG,QAAS,wBAIrCC,EAAmBA,KACnBX,GAAcY,aAAaZ,GAC/BD,GAAwB,IAGpBc,EAAmBA,KACvB,MAAMC,EAAUC,WAAW,KACzBhB,GAAwB,IACvB,KACHE,EAAgBa,IAGlBpI,oBAAU,IACD,KACDsH,GAAcY,aAAaZ,IAEhC,CAACA,IA6EJ,OACE5G,IAAAC,cAAA,UAAQC,UAAU,UAChBF,IAAAC,cAAA,OAAKC,UAAU,kBACbF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,IAAI3H,UAAU,QAAO,qBAC9BF,IAAAC,cAAA,OAAKC,UAAU,aACbF,IAAAC,cAAA,OACEC,UAAU,oBACV4H,aAAcP,EACdQ,aAAcN,GACf,gBAEEf,GACC1G,IAAAC,cAAA,OACEC,UAAU,gBACV4H,aAAcP,EACdQ,aAAcN,GAEdzH,IAAAC,cAAC2H,IAAI,CAACC,GAAG,cAAc3H,UAAU,iBAAgB,cACjDF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,YAAY3H,UAAU,iBAAgB,YAC/CF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,aAAa3H,UAAU,iBAAgB,aAChDF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,WAAW3H,UAAU,iBAAgB,WAC9CF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,WAAW3H,UAAU,iBAAgB,WAC9CF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,UAAU3H,UAAU,iBAAgB,YAInDF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,sBAAsB3H,UAAU,YAAW,sBACpDF,IAAAC,cAAC2H,IAAI,CAACC,GAAG,WAAW3H,UAAU,YAAW,WACzCF,IAAAC,cAAA,UACEC,UAAU,eACVC,QAASA,IAAMkG,GAAkB,IAClC,SAGAS,EACD9G,IAAAC,cAAA,UACEC,UAAU,4BACVC,QAASA,IAAMoG,GAA8B,IAC9C,sBAIDvG,IAAAC,cAAA,UACEC,UAAU,4BACVC,QAASA,IAAMkG,GAAkB,IAClC,wBAOJD,GACCpG,IAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASA,IAAMkG,GAAkB,IAC9DrG,IAAAC,cAAA,OAAKC,UAAU,QAAQC,QAAS+D,GAAKA,EAAE8D,mBACrChI,IAAAC,cAAA,UACEC,UAAU,eACVC,QAASA,IAAMkG,GAAkB,IAClC,QAGDrG,IAAAC,cAAA,UAAI,oBACJD,IAAAC,cAAA,QAAMgE,SAzIUxC,UACxByC,EAAEC,iBACFsC,EAAc,IAEd,IACE,MAAMwB,QAAiB1I,MAAM,GAADyE,OAAIkC,EAAW,yBAAyB,CAClEpE,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBmB,YAAa,UACblB,KAAMC,KAAKC,UAAU,CAAElB,YAGnBrB,QAAasI,EAASvI,OAE5B,IAAKuI,EAAS9F,GAAI,MAAM,IAAI+F,MAAMvI,EAAKwI,SAAW,iBAElD,GAAIxI,EAAKyI,OAAQ,CACf,MAAMC,QAAwB9I,MAAM,GAADyE,OAAIkC,EAAW,4BAA4B,CAC5EpE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBmB,YAAa,UACblB,KAAMC,KAAKC,UAAU,CAAElB,YAEnBsH,QAAoBD,EAAgB3I,OAC1C,IAAK2I,EAAgBlG,GAAI,MAAM,IAAI+F,MAAMI,EAAYH,SACrDxG,aAAa4G,QAAQ,QAAS5I,EAAK6I,OACnC7G,aAAa4G,QAAQ,YAAavH,GAClCX,OAAOoI,cAAc,IAAIC,MAAM,cAC/BjC,EAAc,iBACdkB,WAAW,KACTtB,GAAkB,GAClBpF,EAAS,IACT7B,EAAS,aACR,WAEHqH,EAAc,yDAEhB,MAAO5G,GACP4G,EAAc,8CAgGNzG,IAAAC,cAAA,SACEqE,KAAK,QACLK,YAAY,mBACZH,MAAOxD,EACPyD,SAAWP,GAAMjD,EAASiD,EAAEQ,OAAOF,OACnCI,UAAQ,IAET4B,GAAcxG,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsG,GAC/CxG,IAAAC,cAAA,UAAQqE,KAAK,UAAS,eAM7BgC,GACCtG,IAAAC,cAAA,OAAKC,UAAU,gBAAgBC,QAASA,IAAMoG,GAA8B,IAC1EvG,IAAAC,cAAA,OAAKC,UAAU,QAAQC,QAAS+D,GAAKA,EAAE8D,mBACrChI,IAAAC,cAAA,UACEC,UAAU,eACVC,QAASA,IAAMoG,GAA8B,IAC9C,QAGDvG,IAAAC,cAAA,UAAI,0BACJD,IAAAC,cAAA,QAAMgE,SApHmBxC,UACjCyC,EAAEC,iBACF,IASE,WARuB5E,MAAM,GAADyE,OAAIkC,EAAW,wBAAwB,CACjEpE,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU6E,MAGT5E,GAAI,MAAM,IAAI+F,MAAM,gCAElC3B,GAA8B,GAC9BS,EAAsB,CACpBhE,cAAe,GACfhC,MAAO,GACPiG,aAAc,GACdvB,SAAU,GACVwB,YAAa,GACbpB,YAAa,GACbqB,MAAO,GACPC,WAAYzF,aAAaC,QAAQ,eAEnC,MAAO7B,GACPD,QAAQC,MAAM,+BAAgCA,MA4FtCC,IAAAC,cAAA,SACEqE,KAAK,OACLK,YAAY,gBACZH,MAAOuC,EAAmB/D,cAC1ByB,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrB/D,cAAekB,EAAEQ,OAAOF,SAE1BI,UAAQ,IAEV5E,IAAAC,cAAA,SACEqE,KAAK,QACLK,YAAY,iBACZH,MAAOuC,EAAmB/F,MAC1ByD,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrB/F,MAAOkD,EAAEQ,OAAOF,SAElBI,UAAQ,IAEV5E,IAAAC,cAAA,SACEqE,KAAK,MACLK,YAAY,eACZH,MAAOuC,EAAmBE,aAC1BxC,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrBE,aAAc/C,EAAEQ,OAAOF,SAEzBI,UAAQ,IAEV5E,IAAAC,cAAA,YACE0E,YAAY,cACZH,MAAOuC,EAAmBjB,YAC1BrB,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrBjB,YAAa5B,EAAEQ,OAAOF,WAG1BxE,IAAAC,cAAA,YACE0E,YAAY,mBACZH,MAAOuC,EAAmBI,MAC1B1C,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrBI,MAAOjD,EAAEQ,OAAOF,WAGpBxE,IAAAC,cAAA,UACEuE,MAAOuC,EAAmBrB,SAC1BjB,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrBrB,SAAUxB,EAAEQ,OAAOF,MACnB0C,YAAa,MAEftC,UAAQ,GAER5E,IAAAC,cAAA,UAAQuE,MAAM,IAAG,mBAChBmE,OAAOC,KAAKvB,GAAYzE,IAAI8C,GAC3B1F,IAAAC,cAAA,UAAQ8C,IAAK2C,EAAUlB,MAAOkB,GAAWA,KAG5CqB,EAAmBrB,UAClB1F,IAAAC,cAAA,UACEuE,MAAOuC,EAAmBG,YAC1BzC,SAAWP,GAAM8C,EAAqBzC,wBAAC,GAClCwC,GAAkB,IACrBG,YAAahD,EAAEQ,OAAOF,SAExBI,UAAQ,GAER5E,IAAAC,cAAA,UAAQuE,MAAM,IAAG,sBAChB6C,EAAWN,EAAmBrB,UAAU9C,IAAIiG,GAC3C7I,IAAAC,cAAA,UAAQ8C,IAAK8F,EAAIvB,QAAS9C,MAAOqE,EAAIvB,SAClCuB,EAAI3H,QAKblB,IAAAC,cAAA,UAAQqE,KAAK,UAAS,8B,OCrTpC,MAAMwE,EACF,8B,YCMJ,MAAMC,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAqTPyJ,MAxQWA,KACxB,MAAO5K,EAAWC,GAAgBC,mBAAS,KACpCoI,EAAYuC,GAAiB3K,mBAAS,KACtC4K,EAAkBC,GAAuB7K,mBAAS,QAClDC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,OAClDkL,EAAgBC,GAAqBnL,mBAAS,IAAIoL,MAClDC,EAAoBC,GAAyBtL,oBAAS,GAE7DK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MAAMQ,OD/EgB8B,WAC5B,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,cAAc,CACnDhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,6BAA8BA,GACtCA,IC2DiB2K,GACnB1L,EAAaW,GAGb,MAAM+B,EAAYC,aAAaC,QAAQ,aACvC,GAAIF,EAAW,CACb,MAAMiJ,QAAsBpL,MAAM,+CAAgD,CAChFuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CAAElB,MAAOU,MAE1BkJ,QAAkBD,EAAcjL,OACtC0K,EAAkB,IAAIC,IAAIO,EAAUhI,IAAIiI,GAAQA,EAAKC,eAGvD,MAAMC,EAAmB,IAAI,IAAIV,IAAI1K,EAAKiD,IAAI4C,GAC5CA,EAASvC,gBACX2G,EAAcmB,GACd,MAAOlL,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAEH,MA8FMC,EAAyC,QAArBpB,EACtB9K,EACAA,EAAUmM,OAAO1F,GAAYA,EAASvC,eAAiB4G,GAE3D,OAAI3K,EACKc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cAEtCH,EACKC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAEvB,IAArBhB,EAAU4D,OACL3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,sBAIhCF,IAAAC,cAAA,OAAKC,UAAU,gCACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UACEC,UAAS,OAAA8D,OAA8B,QAArB6F,EAA6B,SAAW,IAC1D1J,QAASA,IAAM2J,EAAoB,QACpC,gBAGAzC,EAAWzE,IAAI8C,GACd1F,IAAAC,cAAA,UACE8C,IAAK2C,EACLxF,UAAS,OAAA8D,OAAS6F,IAAqBnE,EAAW,SAAW,IAC7DvF,QAASA,IAAM2J,EAAoBpE,IAElCA,KAIP1F,IAAAC,cAAA,OAAKC,UAAU,kBACZ+K,EAAkBrI,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OAC7BpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,iBACfF,IAAAC,cAAA,OAAKC,UAAU,kBACO,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACpBrL,IAAAC,cAACqL,IAAO,CACRpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAzDDqL,SAyDwBhG,EAASyB,gBAvDvD5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KAwDhBG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACbrL,IAAAC,cAAC2L,IAAU,CACP1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA3DLa,SA2D4BwE,EAASxE,SAzD3DX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KA0Df2K,MAAM,sBAMhB3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACXsF,EAASsG,oBAC1B9L,IAAAC,cAAA,OAAKC,UAAU,sBAuBrBF,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACRC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GAxMMtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAIL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GACZ,MAAM,IAAI+F,MAAM,2BAElB,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,QAtB1CC,QAAQC,MAAM,yBAqMkBmM,CAAkB3H,wBAAC,GAC1CwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAEhCwE,SAAUyE,M,MC5TtB,MAUMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAkLPiM,MArIWA,KACxB,MAAOpN,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MAAM8I,QAAiB1I,MAAM,GAADyE,OAnFhC,8BAmF2C,wBACvC,IAAKiE,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,6BAElB,MAAMvI,QAAasI,EAASvI,OAC5BV,EAAaW,GACb,MAAOE,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,wCAG1DF,IAAAC,cAAA,OAAKC,UAAU,gCACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,GAADyE,OAzG9B,8BAyGyC,YAAY,CACjDlC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,MCtMpB,MAAMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAiLPkM,MApIUA,KACvB,MAAOrN,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MACMkN,QH1BwB5K,WACpC,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,sBAAsB,CAC3DhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,sCAAuCA,GAC/CA,IGKiBuM,IACYpB,OAC7B1F,GAAsC,wBAA1BA,EAASvC,cAEvBjE,EAAaqN,GACb,MAAOxM,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,uCAG1DF,IAAAC,cAAA,OAAKC,UAAU,+BACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,MC5LpB,MAAMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAiLPqM,MApIWA,KACxB,MAAOxN,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MACMqN,QJFyB/K,WACrC,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,uBAAuB,CAC5DhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,uCAAwCA,GAChDA,IInBiB0M,IACavB,OAC9B1F,GAAYA,EAASvC,aAAayJ,cAAcC,SAAS,cAE3D3N,EAAawN,GACb,MAAO3M,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,wCAG1DF,IAAAC,cAAA,OAAKC,UAAU,gCACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,MC5LpB,MAAMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAiLP0M,MApIQA,KACrB,MAAO7N,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MACM0N,QLsBsBpL,WAClC,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,oBAAoB,CACzDhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,oCAAqCA,GAC7CA,IK3CiB+M,IACU5B,OACzB1F,GAAsC,uBAA1BA,EAASvC,cAEzBjE,EAAa6N,GACb,MAAOhN,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,qCAG1DF,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,MC5LpB,MAAMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAiLP6M,MApISA,KACtB,MAAOhO,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MACM6N,QN8CuBvL,WACnC,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,qBAAqB,CAC1DhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,qCAAsCA,GAC9CA,IMnEiBkN,IACW/B,OAC1B1F,GAAsC,qBAA1BA,EAASvC,cAEzBjE,EAAagO,GACb,MAAOnN,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,sCAG1DF,IAAAC,cAAA,OAAKC,UAAU,8BACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,MC5LpB,MAAMlB,EAAcvF,IAA8C,IAA7C,OAAEwF,EAAM,QAAEC,EAAO,SAAEhF,EAAQ,SAAEuB,GAAUhC,EAC1D,MAAOM,EAAQoF,GAAajK,mBAAS,IAC9BkK,EAAOC,GAAYnK,mBAAS,IAC5BmF,EAAQiF,GAAapK,mBAAS,KAC9Bc,EAAOuJ,GAAYrK,mBAAS,IAcnC,OAAK+J,EAGHhJ,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAI,UAAQuF,EAASxC,eACrBhD,IAAAC,cAAA,QAAMgE,SAlBUC,IACpBA,EAAEC,iBACGL,GAILG,EAAS,CAAEH,SAAQM,WACnB8E,EAAU,GACVG,EAAU,IACVJ,KANEK,EAAS,4BAgBLtJ,IAAAC,cAAA,OAAKC,UAAU,oBACbF,IAAAC,cAAA,aAAO,yBAAsBD,IAAAC,cAAA,QAAMC,UAAU,YAAW,MACxDF,IAAAC,cAAA,OAAKC,UAAU,SACZ,IAAIqJ,MAAM,IAAI3G,IAAI,CAAC4G,EAAG1G,IACrB9C,IAAAC,cAACwJ,IAAM,CACL1G,IAAKD,EACL5C,UAAW4C,GAASqG,GAASrF,GAAU,cAAgB,OACvD3D,QAASA,IAAM+I,EAAUpG,EAAQ,GACjCgF,aAAcA,IAAMsB,EAAStG,EAAQ,GACrCiF,aAAcA,IAAMqB,EAAStF,OAIlC/D,GAASC,IAAAC,cAAA,OAAKC,UAAU,iBAAiBH,IAE5CC,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,aAAO,kCACPD,IAAAC,cAAA,YACEuE,MAAOJ,EACPK,SAAWP,GAAMmF,EAAUnF,EAAEQ,OAAOF,OACpCG,YAAY,mCACZ+E,KAAM,KAGV1J,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQqE,KAAK,SAASnE,QAAS8I,EAAS/I,UAAU,iBAAgB,UAGlEF,IAAAC,cAAA,UAAQqE,KAAK,SAASpE,UAAU,iBAAgB,qBAnCtC,MAiLPgN,MApIQA,KACrB,MAAOnO,EAAWC,GAAgBC,mBAAS,KACpCC,EAASC,GAAcF,oBAAS,IAChCc,EAAOuJ,GAAYrK,mBAAS,OAC5B8K,EAAmBC,GAAwB/K,oBAAS,IACpDgL,EAAkBC,GAAuBjL,mBAAS,MAEzDK,oBAAU,KACamC,WACnB,IACEtC,GAAW,GACX,MACMgO,QPsEsB1L,WAClC,IACE,MAAMwG,QAAiB1I,MAAM,GAADyE,OAAI8E,EAAO,oBAAoB,CACzDhH,OAAQ,MACRC,QAAS,CACP,OAAU,mBACV,eAAgB,oBAElByI,KAAM,SAGR,IAAKvC,EAAS9F,GACZ,MAAM,IAAI+F,MAAM,uBAADlE,OAAwBiE,EAASwC,SAIlD,aADmBxC,EAASvI,OAG5B,MAAOK,GAEP,MADAD,QAAQC,MAAM,oCAAqCA,GAC7CA,IO3FiBqN,IACUlC,OACzB1F,GAAsC,oBAA1BA,EAASvC,cAEzBjE,EAAamO,GACb,MAAOtN,GACPyJ,EAAS,6BACTxJ,QAAQC,MAAM,SAAUF,GACzB,QACCV,GAAW,KAIf6L,IACC,IAmCH,OAAI9L,EAAgBc,IAAAC,cAAA,OAAKC,UAAU,mBAAkB,cACjDH,EAAcC,IAAAC,cAAA,OAAKC,UAAU,iBAAgB,UAAQH,GAChC,IAArBhB,EAAU4D,OAAqB3C,IAAAC,cAAA,OAAKC,UAAU,WAAU,qCAG1DF,IAAAC,cAAA,OAAKC,UAAU,6BACbF,IAAAC,cAAA,OAAKC,UAAU,iBACbF,IAAAC,cAAA,UAAQC,UAAU,cAAa,iBAIjCF,IAAAC,cAAA,OAAKC,UAAU,kBACZnB,EAAU6D,IAAI4C,IAAQ,IAAA2F,EAAAC,EAAA,OACrBpL,IAAAC,cAAA,OAAKC,UAAU,yBAAyB6C,IAAKyC,EAASX,IACpD7E,IAAAC,cAAA,OAAKC,UAAU,gBACbF,IAAAC,cAAA,OAAKC,UAAU,eACbF,IAAAC,cAAA,MAAIC,UAAU,cAAcsF,EAASxC,eACrChD,IAAAC,cAAA,OAAKC,UAAU,kBACS,QAArBiL,EAAA3F,EAASyB,oBAAY,IAAAkE,OAAA,EAArBA,EAAuBE,SACtBrL,IAAAC,cAACqL,IAAO,CACNpL,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KA9BHqL,SA8B0BhG,EAASyB,gBA7B1C5G,OAAOoL,SAASC,KAAI,OAAA1H,OAAUwH,KA8B7BG,MAAM,mBAGK,QAAdP,EAAA5F,EAASxE,aAAK,IAAAoK,OAAA,EAAdA,EAAgBC,SACfrL,IAAAC,cAAC2L,IAAU,CACT1L,UAAU,0BACVqL,KAAM,GACNpL,QAASA,KAlCHa,SAkC0BwE,EAASxE,SAjChDX,OAAOoL,SAASC,KAAI,UAAA1H,OAAahD,KAkC1B2K,MAAM,qBAKd3L,IAAAC,cAAA,OAAKC,UAAU,iBAAiBsF,EAASqG,MACzC7L,IAAAC,cAAA,OAAKC,UAAU,qBAAqBsF,EAASvC,cAC7CjD,IAAAC,cAAA,OAAKC,UAAU,oBAAoBsF,EAASM,aAC5C9F,IAAAC,cAAA,OAAKC,UAAU,uBACbF,IAAAC,cAAA,OAAKC,UAAU,kBAAiB,mBACbsF,EAASsG,sBAG9B9L,IAAAC,cAAA,UACEC,UAAU,iBACVC,QAASA,KACP+J,EAAoB1E,GACpBwE,GAAqB,KAExB,oCAORD,GACC/J,IAAAC,cAAC8I,EAAW,CACVC,OAAQe,EACRd,QAASA,IAAMe,GAAqB,GACpC/F,SAAW8H,GA9FQtK,WACzB,MAAMC,EAAYC,aAAaC,QAAQ,aACvC,GAAKqI,EAEL,IAeE,WAduB1K,MAAM,oCAAqC,CAChEuC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnB4I,YAAab,EAAiBpF,GAC9BmH,eAAgBD,EAAWE,cAC3BjL,MAAOU,EACPoC,OAAQiI,EAAWjI,OACnBC,QAASgI,EAAW3H,YAIVjC,GAAI,MAAM,IAAI+F,MAAM,2BAClC,MAAOrI,GACPC,QAAQC,MAAM,2BAA4BF,KAyEZqM,CAAkB3H,wBAAC,GACxCwH,GAAU,IACbE,cAAehC,EAAiBjJ,SAElCwE,SAAUyE,M,KCvJLoD,MA3BHA,IAERrN,IAAAC,cAACqN,IAAM,KACLtN,IAAAC,cAAA,OAAKC,UAAU,OACbF,IAAAC,cAACkG,EAAM,MACPnG,IAAAC,cAAA,YACED,IAAAC,cAACsN,IAAM,KACLvN,IAAAC,cAACuN,IAAK,CAACC,KAAK,IAAIC,QAAS1N,IAAAC,cAACnB,EAAI,QAC9BkB,IAAAC,cAACuN,IAAK,CAACC,KAAK,iBAAiBC,QAAS1N,IAAAC,cAACqF,EAAc,QACrDtF,IAAAC,cAACuN,IAAK,CAACC,KAAK,WAAWC,QAAS1N,IAAAC,cAACU,EAAO,QACxCX,IAAAC,cAACuN,IAAK,CACJC,KAAK,sBACLC,QAAS1N,IAAAC,cAAC0J,EAAiB,QAE7B3J,IAAAC,cAACuN,IAAK,CAACC,KAAK,cAAcC,QAAS1N,IAAAC,cAACkM,EAAiB,QACrDnM,IAAAC,cAACuN,IAAK,CAACC,KAAK,YAAYC,QAAS1N,IAAAC,cAACmM,EAAgB,QAClDpM,IAAAC,cAACuN,IAAK,CAACC,KAAK,aAAaC,QAAS1N,IAAAC,cAACsM,EAAiB,QACpDvM,IAAAC,cAACuN,IAAK,CAACC,KAAK,WAAWC,QAAS1N,IAAAC,cAAC2M,EAAc,QAC/C5M,IAAAC,cAACuN,IAAK,CAACC,KAAK,WAAWC,QAAS1N,IAAAC,cAAC8M,EAAe,QAChD/M,IAAAC,cAACuN,IAAK,CAACC,KAAK,UAAUC,QAAS1N,IAAAC,cAACiN,EAAc,YC7B7CS,qBAAWC,SAASC,eAAe,SAC3CC,OACH9N,IAAAC,cAACD,IAAM+N,WAAU,KACf/N,IAAAC,cAACoN,EAAG,U","file":"static/js/main.1df7d4bd.chunk.js","sourcesContent":["// Home.js\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Home.css';\n\nconst Home = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    fetch('http://localhost:3000/api/providers')\n      .then(res => res.json())\n      .then(data => {\n        setProviders(data.providers);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error fetching providers:', err);\n        setLoading(false);\n      });\n  }, []);\n\n  const handleScroll = () => {\n    window.scrollTo({\n      top: window.innerHeight,\n      behavior: 'smooth'\n    });\n  };\n\n  return (\n    <div className=\"home\">\n      <div className=\"hero-container\">\n        <div className=\"glass-card\">\n          <h1 className=\"title-animation\">Seattle Nagarathar Recommendations</h1>\n          <p className=\"subtitle-animation\">Trusted recommendations from the Seattle Nagarathar Community.</p>\n          <div className=\"scroll-indicator\" onClick={handleScroll}>\n            <span className=\"arrow\"></span>\n          </div>\n        </div>\n\n        <div className=\"service-container\">\n          {loading ? (\n            <div className=\"loader\"></div>\n          ) : (\n            <>\n              <div \n                className=\"service-card\" \n                onClick={() => navigate('/home-services')}\n              >\n                <div className=\"card-content\">\n                  <h2>Home Services</h2>\n                  <p>Find vetted professionals for your home</p>\n                </div>\n                <div className=\"card-overlay\"></div>\n              </div>\n\n              <div \n                className=\"service-card\"\n                onClick={() => navigate('/financial-services')}\n              >\n                <div className=\"card-content\">\n                  <h2>Financial Services</h2>\n                  <p>Connect with trusted financial advisors</p>\n                </div>\n                <div className=\"card-overlay\"></div>\n              </div>\n            </>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n\n// import React, { useEffect, useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n// import './Home.css';\n\n// const Home = () => {\n//   const [providers, setProviders] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     fetch('http://localhost:3000/api/providers')\n//       .then(res => res.json())\n//       .then(data => {\n//         setProviders(data.providers);\n//         setLoading(false);\n//       })\n//       .catch(err => {\n//         console.error('Error fetching providers:', err);\n//         setLoading(false);\n//       });\n//   }, []);\n\n//   return (\n//     <div className=\"home\">\n//       <div className=\"hero-container\">\n//         <div className=\"glass-card\">\n//           <h1>Seattle Nagarathar Recommenations</h1>\n//           <p>Trusted recommendations from the Seattle Nagarathar Community.</p>\n//         </div>\n\n//         <div className=\"service-container\">\n//           {loading ? (\n//             <div>Loading...</div>\n//           ) : (\n//             <>\n//               <div \n//                 className=\"service-card\" \n//                 onClick={() => navigate('/home-services')}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 <div className=\"card-content\">\n//                   <h2>Home Services</h2>\n//                   <p>Find vetted professionals for your home</p>\n//                 </div>\n//                 <div className=\"card-overlay\"></div>\n//               </div>\n\n//               <div \n//                 className=\"service-card\"\n//                 onClick={() => navigate('/financial-services')}\n//                 style={{ cursor: 'pointer' }}\n//               >\n//                 <div className=\"card-content\">\n//                   <h2>Financial Services</h2>\n//                   <p>Connect with trusted financial advisors</p>\n//                 </div>\n//                 <div className=\"card-overlay\"></div>\n//               </div>\n//             </>\n//           )}\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Home;\n","// src/pages/Profile/Profile.js\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './Profile.css';\n\nconst Profile = () => {\n  const navigate = useNavigate();\n  const [userData, setUserData] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [email, setEmail] = useState('—');\n  const [name, setName] = useState('—');\n  const [connections, setConnections] = useState([]);\n  const [recommendations, setRecommendations] = useState([]);\n\n  const fetchAllData = async () => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!userEmail) {\n      setIsLoading(false);\n      return;\n    }\n\n    try {\n      // Fetch user data\n      const userResponse = await fetch(`http://localhost:3000/api/auth/check-email`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email: userEmail })\n      });\n\n      if (userResponse.ok) {\n        const userData = await userResponse.json();\n        setName(userData.name || '—');\n        setUserData(userData);\n        setEmail(userData.email || '—');\n      }\n\n      // Fetch connections\n      const connectionsResponse = await fetch('http://localhost:3000/api/connections/check-connections', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email: userEmail })\n      });\n\n      if (connectionsResponse.ok) {\n        const connectionsData = await connectionsResponse.json();\n        setConnections(connectionsData);\n      }\n\n      // Fetch recommendations\n      const recommendationsResponse = await fetch('http://localhost:3000/api/providers/user-recommendations', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email: userEmail })\n      });\n\n      if (recommendationsResponse.ok) {\n        const recommendationsData = await recommendationsResponse.json();\n        setRecommendations(recommendationsData);\n      }\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear all state\n    setUserData(null);\n    setEmail('—');\n    setName('—');\n    setConnections([]);\n    setRecommendations([]);\n    \n    // Clear localStorage\n    localStorage.removeItem('userEmail');\n    localStorage.removeItem('token');\n    \n    // Navigate to home page\n    navigate('/');\n  };\n\n  useEffect(() => {\n    fetchAllData();\n    \n    const handleLogin = () => {\n      setIsLoading(true);\n      fetchAllData();\n    };\n\n    window.addEventListener('userLogin', handleLogin);\n    return () => {\n      window.removeEventListener('userLogin', handleLogin);\n    };\n  }, [navigate]);\n\n  if (isLoading) {\n    return <div className=\"loading-spinner\">Loading...</div>;\n  }\n\n  return (\n    <div className=\"profile-container\">\n      <div className=\"profile-header\">\n        <h1>Profile</h1>\n        {!userData && <p className=\"login-prompt\">Please log in to view your full profile</p>}\n      </div>\n\n      <div className=\"profile-content\">\n        <div className=\"profile-section\">\n          <h2>Personal Information</h2>\n          <div className=\"info-grid\">\n            <div className=\"info-item\">\n              <label>NAME</label>\n              <div className=\"info-value\">{name}</div>\n            </div>\n            <div className=\"info-item\">\n              <label>EMAIL</label>\n              <div className=\"info-value\">{email}</div>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"profile-section\">\n          <h2>Recommendations</h2>\n          <div className=\"recommendations-grid\">\n            {recommendations.length > 0 ? (\n              recommendations.map((rec, index) => (\n                <div key={index} className=\"recommendation-card\">\n                  <h3 className=\"provider-name\">{rec.business_name}</h3>\n                  <div className=\"service-tag\">{rec.service_type}</div>\n                  <div className=\"credentials\">{rec.credentials}</div>\n                  <button className=\"contact-button\">Contact Provider</button>\n                </div>\n              ))\n            ) : (\n              <div className=\"recommendation-placeholder\">\n                No recommendations made yet\n              </div>\n            )}\n          </div>\n        </div>\n\n        <div className=\"profile-section\">\n          <h2>1st Level Connections</h2>\n          <div className=\"connections-table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Connected Since</th>\n                </tr>\n              </thead>\n              <tbody>\n                {connections.length > 0 ? (\n                  connections.map((connection) => (\n                    <tr key={connection.email}>\n                      <td>{connection.name}</td>\n                      <td>{connection.email}</td>\n                      <td>{connection.connected_at}</td>\n                    </tr>\n                  ))\n                ) : (\n                  <tr>\n                    <td className=\"placeholder-cell\">—</td>\n                    <td className=\"placeholder-cell\">—</td>\n                    <td className=\"placeholder-cell\">—</td>\n                  </tr>\n                )}\n              </tbody>\n            </table>\n          </div>\n        </div>\n\n        <button className=\"logout-button\" onClick={handleLogout}>\n          Logout\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n\n// // src/pages/Profile/Profile.js\n// import React, { useState, useEffect } from 'react';\n// import './Profile.css';\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [email, setEmail] = useState('—');\n//   const [name, setName] = useState('—');\n//   const [connections, setConnections] = useState([]);\n//   const [recommendations, setRecommendations] = useState([]);\n\n//   const fetchAllData = async () => {\n//     const userEmail = localStorage.getItem('userEmail');\n//     if (!userEmail) {\n//       setIsLoading(false);\n//       return;\n//     }\n\n//     try {\n//       // Fetch user data\n//       const userResponse = await fetch(`http://localhost:3000/api/auth/check-email`, {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email: userEmail })\n//       });\n\n//       if (userResponse.ok) {\n//         const userData = await userResponse.json();\n//         setName(userData.name || '—');\n//         setUserData(userData);\n//         setEmail(userData.email || '—');\n//       }\n\n//       // Fetch connections\n//       const connectionsResponse = await fetch('http://localhost:3000/api/connections/check-connections', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email: userEmail })\n//       });\n\n//       if (connectionsResponse.ok) {\n//         const connectionsData = await connectionsResponse.json();\n//         setConnections(connectionsData);\n//       }\n\n//       // Fetch recommendations\n//       const recommendationsResponse = await fetch('http://localhost:3000/api/providers/user-recommendations', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({ email: userEmail })\n//       });\n\n//       if (recommendationsResponse.ok) {\n//         const recommendationsData = await recommendationsResponse.json();\n//         setRecommendations(recommendationsData);\n//       }\n//     } catch (error) {\n//       console.error('Error fetching data:', error);\n//     } finally {\n//       setIsLoading(false);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchAllData();\n    \n//     const handleLogin = () => {\n//       setIsLoading(true);\n//       fetchAllData();\n//     };\n\n//     window.addEventListener('userLogin', handleLogin);\n//     return () => {\n//       window.removeEventListener('userLogin', handleLogin);\n//     };\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"loading-spinner\">Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-header\">\n//         <h1>Profile</h1>\n//         {!userData && <p className=\"login-prompt\">Please log in to view your full profile</p>}\n//       </div>\n\n//       <div className=\"profile-content\">\n//         <div className=\"profile-section\">\n//           <h2>Personal Information</h2>\n//           <div className=\"info-grid\">\n//             <div className=\"info-item\">\n//               <label>NAME</label>\n//               <div className=\"info-value\">{name}</div>\n//             </div>\n//             <div className=\"info-item\">\n//               <label>EMAIL</label>\n//               <div className=\"info-value\">{email}</div>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>Recommendations</h2>\n//           <div className=\"recommendations-grid\">\n//             {recommendations.length > 0 ? (\n//               recommendations.map((rec, index) => (\n//                 <div key={index} className=\"recommendation-card\">\n//                   <h3 className=\"provider-name\">{rec.business_name}</h3>\n//                   <div className=\"service-tag\">{rec.service_type}</div>\n//                   <div className=\"credentials\">{rec.credentials}</div>\n//                   <button className=\"contact-button\">Contact Provider</button>\n//                 </div>\n//               ))\n//             ) : (\n//               <div className=\"recommendation-placeholder\">\n//                 No recommendations made yet\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>1st Level Connections</h2>\n//           <div className=\"connections-table\">\n//             <table>\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Connected Since</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {connections.length > 0 ? (\n//                   connections.map((connection) => (\n//                     <tr key={connection.email}>\n//                       <td>{connection.name}</td>\n//                       <td>{connection.email}</td>\n//                       <td>{connection.connected_at}</td>\n//                     </tr>\n//                   ))\n//                 ) : (\n//                   <tr>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                   </tr>\n//                 )}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// // src/pages/Profile/Profile.js\n// import React, { useState, useEffect } from 'react';\n// import './Profile.css';\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [email, setEmail] = useState('—');\n//   const [name, setName] = useState('—');\n//   const [connections, setConnections] = useState([]);\n\n//   const [recommendations, setRecommendations] = useState([]);\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       const userEmail = localStorage.getItem('userEmail');\n//       if (!userEmail) {\n//         setIsLoading(false);\n//         return;\n//       }\n\n//       try {\n//         const response = await fetch(`http://localhost:3000/api/auth/check-email`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ email: userEmail })\n//         });\n\n//         if (response.ok) {\n//           const data = await response.json();\n//           // console.log('Full response:', data);\n//           // console.log('Email:', data.email);\n//           // console.log('Name:', data.name);\n//           setName(data.name || '—');\n//           setUserData(data);\n//           setEmail(data.email || '—');\n//         } else {\n//           console.error('Failed to fetch user data');\n//         }\n//       } catch (error) {\n//         console.error('Error fetching user data:', error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchUserData();\n//     const handleLogin = () => {\n//       fetchUserData();\n//     };\n  \n//     window.addEventListener('userLogin', handleLogin);\n  \n//     return () => {\n//       window.removeEventListener('userLogin', handleLogin);\n//     };\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchConnections = async () => {\n//       const userEmail = localStorage.getItem('userEmail');\n//       if (!userEmail) return;\n\n//       try {\n//         const response = await fetch('http://localhost:3000/api/connections/check-connections', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ email: userEmail })\n//         });\n//         console.log('Response status:', response.status);\n\n//         if (response.ok) {\n//           const data = await response.json();\n//           console.log('Full connections response:', data);\n//           console.log('Connections data:', data.rows);\n//           setConnections(data);\n//         } else {\n//           console.error('Failed to fetch connections');\n//           console.log('Response status:', response.status);\n//           console.log('Response statusText:', response.statusText);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching connections:', error);\n//         console.log('Error details:', error.message);\n//       }\n//     };\n\n//     fetchConnections();\n//   }, []);\n\n//   useEffect(() => {\n//     const fetchRecommendations = async () => {\n//       const userEmail = localStorage.getItem('userEmail');\n//       if (!userEmail) return;\n  \n//       try {\n//         const response = await fetch('http://localhost:3000/api/providers/user-recommendations', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ email: userEmail })\n//         });\n//         console.log('Response status:', response.status);\n  \n//         if (response.ok) {\n//           const data = await response.json();\n//           setRecommendations(data);\n//         }\n//       } catch (error) {\n//         console.error('Error fetching recommendations:', error);\n//       }\n//     };\n  \n//     fetchRecommendations();\n//   }, []);\n\n\n//   if (isLoading) {\n//     return <div className=\"loading-spinner\">Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-header\">\n//         <h1>Profile</h1>\n//         {!userData && <p className=\"login-prompt\">Please log in to view your full profile</p>}\n//       </div>\n\n//       <div className=\"profile-content\">\n//         <div className=\"profile-section\">\n//           <h2>Personal Information</h2>\n//           <div className=\"info-grid\">\n//             <div className=\"info-item\">\n//               <label>NAME</label>\n//               <div className=\"info-value\">{name}</div>\n//             </div>\n//             <div className=\"info-item\">\n//               <label>EMAIL</label>\n//               <div className=\"info-value\">{email}</div>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>Recommendations</h2>\n//           <div className=\"recommendations-grid\">\n//             {recommendations.length > 0 ? (\n//               recommendations.map((rec, index) => (\n//                 <div key={index} className=\"recommendation-card\">\n//                   <h3 className=\"provider-name\">{rec.business_name}</h3>\n//                   <div className=\"service-tag\">{rec.service_type}</div>\n//                   <div className=\"credentials\">{rec.credentials}</div>\n//                   <button className=\"contact-button\">Contact Provider</button>\n//                 </div>\n//               ))\n//             ) : (\n//               <div className=\"recommendation-placeholder\">\n//                 No recommendations made yet\n//               </div>\n//             )}\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>1st Level Connections</h2>\n//           <div className=\"connections-table\">\n//             <table>\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Connected Since</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {connections.length > 0 ? (\n//                   connections.map((connection) => (\n//                     <tr key={connection.email}>\n//                       <td>{connection.name}</td>\n//                       <td>{connection.email}</td>\n//                       <td>{connection.connected_at}</td>\n//                     </tr>\n//                   ))\n//                 ) : (\n//                   <tr>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                   </tr>\n//                 )}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;\n\n// import React, { useState, useEffect } from 'react';\n// import './Profile.css';\n\n// const Profile = () => {\n//   const [userData, setUserData] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [email, setEmail] = useState('—');\n//   const [name, setName] = useState('—');\n\n//   useEffect(() => {\n//     const fetchUserData = async () => {\n//       const userEmail = localStorage.getItem('userEmail');\n//       if (!userEmail) {\n//         setIsLoading(false);\n//         return;\n//       }\n\n//       try {\n//         const response = await fetch(`http://localhost:3000/api/auth/check-email`, {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json'\n//           },\n//           body: JSON.stringify({ email: userEmail })\n//         });\n\n//         if (response.ok) {\n//           const data = await response.json();\n//           console.log('Full response:', data);\n//           console.log('Email:', data.email);\n//           console.log('Name:', data.name);\n//           setName(data.name || '—');\n//           setUserData(data);\n//           setEmail(data.email || '—');\n//         } else {\n//           console.error('Failed to fetch user data');\n//         }\n//       } catch (error) {\n//         console.error('Error fetching user data:', error);\n//       } finally {\n//         setIsLoading(false);\n//       }\n//     };\n\n//     fetchUserData();\n//   }, []);\n\n//   if (isLoading) {\n//     return <div className=\"loading-spinner\">Loading...</div>;\n//   }\n\n//   return (\n//     <div className=\"profile-container\">\n//       <div className=\"profile-header\">\n//         <h1>Profile</h1>\n//         {!userData && <p className=\"login-prompt\">Please log in to view your full profile</p>}\n//       </div>\n\n//       <div className=\"profile-content\">\n//         <div className=\"profile-section\">\n//           <h2>Personal Information</h2>\n//           <div className=\"info-grid\">\n//             <div className=\"info-item\">\n//               <label>NAME</label>\n//               <div className=\"info-value\">{name}</div>\n//             </div>\n//             <div className=\"info-item\">\n//               <label>EMAIL</label>\n//               <div className=\"info-value\">{email}</div>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>Recommendations</h2>\n//           <div className=\"recommendations-grid\">\n//             {[1, 2, 3].map((_, index) => (\n//               <div key={index} className=\"recommendation-card\">\n//                 <div className=\"recommendation-placeholder\" />\n//               </div>\n//             ))}\n//           </div>\n//         </div>\n\n//         <div className=\"profile-section\">\n//           <h2>1st Level Connections</h2>\n//           <div className=\"connections-table\">\n//             <table>\n//               <thead>\n//                 <tr>\n//                   <th>Name</th>\n//                   <th>Email</th>\n//                   <th>Connected Since</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {[1, 2, 3].map((_, index) => (\n//                   <tr key={index}>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                     <td className=\"placeholder-cell\">—</td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Profile;","import React, { useState, useEffect } from 'react';\nimport './ReviewSection.css';\n\nconst ReviewSection = ({ providerId }) => {\n  const [reviews, setReviews] = useState([]);\n  const [newReview, setNewReview] = useState({ rating: 5, content: '' });\n\n  useEffect(() => {\n    // Fetch reviews for this provider\n    fetch(`http://localhost:3000/api/providers/${providerId}/reviews`)\n      .then(res => res.json())\n      .then(data => setReviews(data.reviews))\n      .catch(err => console.error('Error fetching reviews:', err));\n  }, [providerId]);\n\n  const handleSubmitReview = (e) => {\n    e.preventDefault();\n    // Add review to database\n    fetch(`http://localhost:3000/api/providers/${providerId}/reviews`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newReview),\n    })\n      .then(res => res.json())\n      .then(data => {\n        setReviews([...reviews, data.review]);\n        setNewReview({ rating: 5, content: '' });\n      })\n      .catch(err => console.error('Error posting review:', err));\n  };\n\n  return (\n    <div className=\"review-section\">\n      <h2>Reviews</h2>\n      \n      <div className=\"write-review\">\n        <h3>Write a Review</h3>\n        <form onSubmit={handleSubmitReview}>\n          <div className=\"rating-select\">\n            {[5,4,3,2,1].map(num => (\n              <button\n                key={num}\n                type=\"button\"\n                className={`rating-star ${newReview.rating >= num ? 'active' : ''}`}\n                onClick={() => setNewReview({...newReview, rating: num})}\n              >\n                ★\n              </button>\n            ))}\n          </div>\n          <textarea\n            value={newReview.content}\n            onChange={(e) => setNewReview({...newReview, content: e.target.value})}\n            placeholder=\"Share your experience...\"\n            required\n          />\n          <button type=\"submit\" className=\"submit-review\">Post Review</button>\n        </form>\n      </div>\n\n      <div className=\"reviews-list\">\n        {reviews.map(review => (\n          <div key={review.id} className=\"review-card\">\n            <div className=\"review-header\">\n              <img \n                src={review.user.profile_image || '/default-avatar.png'} \n                alt={review.user.name}\n                className=\"reviewer-image\"\n              />\n              <div className=\"reviewer-info\">\n                <h4>{review.user.name}</h4>\n                <div className=\"review-rating\">\n                  {'★'.repeat(review.rating)}\n                  {'☆'.repeat(5-review.rating)}\n                </div>\n              </div>\n              <div className=\"review-date\">\n                {new Date(review.created_at).toLocaleDateString()}\n              </div>\n            </div>\n            <p className=\"review-content\">{review.content}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ReviewSection;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport ReviewSection from '../../components/ReviewSection/ReviewSection';\nimport './ServiceDetails.css';\n\nconst ServiceDetails = () => {\n  const { id } = useParams();\n  const [provider, setProvider] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/api/providers/${id}`)\n      .then(res => res.json())\n      .then(data => {\n        setProvider(data.provider);\n        setLoading(false);\n      })\n      .catch(err => {\n        console.error('Error fetching provider details:', err);\n        setLoading(false);\n      });\n  }, [id]);\n\n  if (loading) return <div className=\"loading\">Loading...</div>;\n  if (!provider) return <div>Provider not found</div>;\n\n  return (\n    <div className=\"service-details\">\n      <div className=\"provider-header\">\n        <div className=\"container\">\n          <div className=\"provider-info-detailed\">\n            <h1>{provider.business_name}</h1>\n            <div className=\"provider-meta\">\n              <span className=\"category\">{provider.category}</span>\n              <span className=\"rating\">★ {provider.average_rating}</span>\n              <span className=\"reviews\">({provider.total_reviews} reviews)</span>\n            </div>\n            <div className=\"trust-score\">\n              Trust Score: {provider.trust_score}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"container\">\n        <div className=\"provider-content\">\n          <div className=\"main-content\">\n            <section className=\"about-section\">\n              <h2>About</h2>\n              <p>{provider.description}</p>\n            </section>\n            \n            <ReviewSection providerId={id} />\n          </div>\n\n          <div className=\"sidebar\">\n            <div className=\"contact-card\">\n              <h3>Contact Information</h3>\n              <button className=\"contact-button\">Message Provider</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ServiceDetails;\n","const env = process.env.NODE_ENV;\nconsole.log('Raw NODE_ENV value:', env);\nconsole.log('Type of NODE_ENV:', typeof env);\n\n// const BACKEND_URL = process.env.NODE_ENV === 'production'\n//   ? 'https://maven-backend-x94s.onrender.com'\n//   : 'http://localhost:3000';\n\nconst BACKEND_URL = 'https://maven-backend-x94s.onrender.com'\n\nconsole.log('Environment in config:', process.env.NODE_ENV);\nconsole.log('BACKEND_URL in config:', BACKEND_URL);\n\nexport default BACKEND_URL;","import React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport './Header.css';\nimport BACKEND_URL from '../../config';\n\nconst Header = () => {\n  // const BACKEND_URL = process.env.NODE_ENV === 'development' \n  // ? 'http://localhost:3000' \n  // : 'https://maven-backend-x94s.onrender.com';\n\n  // const BACKEND_URL = process.env.NODE_ENV === 'production'\n  //   ? 'https://maven-backend-x94s.onrender.com'\n  //   : 'http://localhost:3000';\n\n  // console.log('Current Environment:', process.env.NODE_ENV);\n  // console.log('Backend URL:', BACKEND_URL);\n\n  const navigate = useNavigate();\n  const [showLoginModal, setShowLoginModal] = useState(false);\n  const [showAddRecommendationModal, setShowAddRecommendationModal] = useState(false);\n  const [email, setEmail] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [showServicesDropdown, setShowServicesDropdown] = useState(false);\n  const [closeTimeout, setCloseTimeout] = useState(null);\n  const isLoggedIn = localStorage.getItem('userEmail');\n  const [recommendationForm, setRecommendationForm] = useState({\n    business_name: '',\n    email: '',\n    phone_number: '',\n    category: '',\n    subcategory: '',\n    description: '',\n    notes: '',\n    user_email: localStorage.getItem('userEmail') || ''\n  });\n\n  const categories = {\n    'Home Services': [\n      { name: 'Appliances', backend: 'Appliance Services' },\n      { name: 'Cleaning', backend: 'Cleaning and Upkeep' },\n      { name: 'Utilities', backend: 'Utilities' },\n      { name: 'Repairs', backend: 'Structural Repairs' },\n      { name: 'Outdoor', backend: 'Outdoor Services' },\n      { name: 'Moving and Misc', backend: 'Moving and Misc' }\n    ],\n    'Financial Services': [\n      { name: 'Tax Preparation', backend: 'Tax Preparation' },\n      { name: 'Financial Planning', backend: 'Financial Planning' }\n    ]\n  };\n\n  const handleMouseEnter = () => {\n    if (closeTimeout) clearTimeout(closeTimeout);\n    setShowServicesDropdown(true);\n  };\n\n  const handleMouseLeave = () => {\n    const timeout = setTimeout(() => {\n      setShowServicesDropdown(false);\n    }, 300);\n    setCloseTimeout(timeout);\n  };\n\n  useEffect(() => {\n    return () => {\n      if (closeTimeout) clearTimeout(closeTimeout);\n    };\n  }, [closeTimeout]);\n\n  const handleEmailSubmit = async (e) => {\n    e.preventDefault();\n    setEmailError('');\n    \n    try {\n      const response = await fetch(`${BACKEND_URL}/api/auth/check-email`, {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        credentials: 'include',\n        body: JSON.stringify({ email })\n      });\n      \n      const data = await response.json();\n      \n      if (!response.ok) throw new Error(data.message || 'Network error');\n      \n      if (data.exists) {\n        const sessionResponse = await fetch(`${BACKEND_URL}/api/auth/create-session`, {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          credentials: 'include',\n          body: JSON.stringify({ email })\n        });\n        const sessionData = await sessionResponse.json();  // Add this line\n        if (!sessionResponse.ok) throw new Error(sessionData.message);\n        localStorage.setItem('token', data.token);\n        localStorage.setItem('userEmail', email);\n        window.dispatchEvent(new Event('userLogin'));\n        setEmailError('Welcome back!');\n        setTimeout(() => {\n          setShowLoginModal(false);\n          setEmail('');\n          navigate('/profile');\n        }, 1500);\n      } else {\n        setEmailError('Email not found. Would you like to create an account?');\n      }\n    } catch (err) {\n      setEmailError('Error checking email. Please try again.');\n    }\n  };\n\n  const handleRecommendationSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await fetch(`${BACKEND_URL}/api/recommendations`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(recommendationForm)\n      });\n      \n      if (!response.ok) throw new Error('Failed to add recommendation');\n      \n      setShowAddRecommendationModal(false);\n      setRecommendationForm({\n        business_name: '',\n        email: '',\n        phone_number: '',\n        category: '',\n        subcategory: '',\n        description: '',\n        notes: '',\n        user_email: localStorage.getItem('userEmail')\n      });\n    } catch (error) {\n      console.error('Error adding recommendation:', error);\n    }\n  };\n\n  return (\n    <header className=\"header\">\n      <div className=\"header-content\">\n        <Link to=\"/\" className=\"logo\">Seanag Recommends</Link>\n        <nav className=\"nav-links\">\n          <div \n            className=\"nav-link dropdown\" \n            onMouseEnter={handleMouseEnter}\n            onMouseLeave={handleMouseLeave}\n          >\n            Home Services\n            {showServicesDropdown && (\n              <div \n                className=\"dropdown-menu\"\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n              >\n                <Link to=\"/appliances\" className=\"dropdown-item\">Appliances</Link>\n                <Link to=\"/cleaning\" className=\"dropdown-item\">Cleaning</Link>\n                <Link to=\"/utilities\" className=\"dropdown-item\">Utilities</Link>\n                <Link to=\"/repairs\" className=\"dropdown-item\">Repairs</Link>\n                <Link to=\"/outdoor\" className=\"dropdown-item\">Outdoor</Link>\n                <Link to=\"/moving\" className=\"dropdown-item\">Moving</Link>\n              </div>\n            )}\n          </div>\n          <Link to=\"/financial-services\" className=\"nav-link\">Financial Services</Link>\n          <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\n          <button \n            className=\"login-button\" \n            onClick={() => setShowLoginModal(true)}\n          >\n            Login\n          </button>\n          {isLoggedIn ? (\n          <button \n            className=\"add-recommendation-button\"\n            onClick={() => setShowAddRecommendationModal(true)}\n          >\n            Add Recommendation\n          </button>\n        ) : (\n          <button \n            className=\"add-recommendation-button\"\n            onClick={() => setShowLoginModal(true)}\n          >\n            Add Recommendation\n          </button>\n        )}\n        </nav>\n      </div>\n\n      {showLoginModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowLoginModal(false)}>\n          <div className=\"modal\" onClick={e => e.stopPropagation()}>\n            <button \n              className=\"close-button\" \n              onClick={() => setShowLoginModal(false)}\n            >\n              ×\n            </button>\n            <h2>Welcome to Maven</h2>\n            <form onSubmit={handleEmailSubmit}>\n              <input\n                type=\"email\"\n                placeholder=\"Enter your email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                required\n              />\n              {emailError && <div className=\"error-message\">{emailError}</div>}\n              <button type=\"submit\">Continue</button>\n            </form>\n          </div>\n        </div>\n      )}\n\n      {showAddRecommendationModal && (\n        <div className=\"modal-overlay\" onClick={() => setShowAddRecommendationModal(false)}>\n          <div className=\"modal\" onClick={e => e.stopPropagation()}>\n            <button \n              className=\"close-button\" \n              onClick={() => setShowAddRecommendationModal(false)}\n            >\n              ×\n            </button>\n            <h2>Add New Recommendation</h2>\n            <form onSubmit={handleRecommendationSubmit}>\n              <input\n                type=\"text\"\n                placeholder=\"Business Name\"\n                value={recommendationForm.business_name}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  business_name: e.target.value\n                })}\n                required\n              />\n              <input\n                type=\"email\"\n                placeholder=\"Business Email\"\n                value={recommendationForm.email}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  email: e.target.value\n                })}\n                required\n              />\n              <input\n                type=\"tel\"\n                placeholder=\"Phone Number\"\n                value={recommendationForm.phone_number}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  phone_number: e.target.value\n                })}\n                required\n              />\n              <textarea\n                placeholder=\"Description\"\n                value={recommendationForm.description}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  description: e.target.value\n                })}\n              />\n              <textarea\n                placeholder=\"Additional Notes\"\n                value={recommendationForm.notes}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  notes: e.target.value\n                })}\n              />\n              <select\n                value={recommendationForm.category}\n                onChange={(e) => setRecommendationForm({\n                  ...recommendationForm,\n                  category: e.target.value,\n                  subcategory: ''\n                })}\n                required\n              >\n                <option value=\"\">Select Category</option>\n                {Object.keys(categories).map(category => (\n                  <option key={category} value={category}>{category}</option>\n                ))}\n              </select>\n              {recommendationForm.category && (\n                <select\n                  value={recommendationForm.subcategory}\n                  onChange={(e) => setRecommendationForm({\n                    ...recommendationForm,\n                    subcategory: e.target.value\n                  })}\n                  required\n                >\n                  <option value=\"\">Select Subcategory</option>\n                  {categories[recommendationForm.category].map(sub => (\n                    <option key={sub.backend} value={sub.backend}>\n                      {sub.name}\n                    </option>\n                  ))}\n                </select>\n              )}\n              <button type=\"submit\">Submit Recommendation</button>\n            </form>\n          </div>\n        </div>\n      )}\n    </header>\n  );\n};\n\nexport default Header;\n\n\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './Header.css';\n\n// const BACKEND_URL = 'https://maven-backend-x94s.onrender.com';\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const [showLoginModal, setShowLoginModal] = useState(false);\n//   const [showAddRecommendationModal, setShowAddRecommendationModal] = useState(false);\n//   const [email, setEmail] = useState('');\n//   const [emailError, setEmailError] = useState('');\n//   const [showServicesDropdown, setShowServicesDropdown] = useState(false);\n//   const [closeTimeout, setCloseTimeout] = useState(null);\n//   const isLoggedIn = localStorage.getItem('userEmail');\n//   const [recommendationForm, setRecommendationForm] = useState({\n//     business_name: '',\n//     email: '',\n//     phone_number: '',\n//     category: '',\n//     subcategory: '',\n//     description: '',\n//     notes: '',\n//     user_email: localStorage.getItem('userEmail') || ''\n//   });\n\n//   const categories = {\n//     'Home Services': [\n//       { name: 'Appliances', backend: 'Appliance Services' },\n//       { name: 'Cleaning', backend: 'Cleaning and Upkeep' },\n//       { name: 'Utilities', backend: 'Utilities' },\n//       { name: 'Repairs', backend: 'Structural Repairs' },\n//       { name: 'Outdoor', backend: 'Outdoor Services' },\n//       { name: 'Moving and Misc', backend: 'Moving and Misc' }\n//     ],\n//     'Financial Services': [\n//       { name: 'Tax Preparation', backend: 'Tax Preparation' },\n//       { name: 'Financial Planning', backend: 'Financial Planning' }\n//     ]\n//   };\n\n//   const handleMouseEnter = () => {\n//     if (closeTimeout) clearTimeout(closeTimeout);\n//     setShowServicesDropdown(true);\n//   };\n\n//   const handleMouseLeave = () => {\n//     const timeout = setTimeout(() => {\n//       setShowServicesDropdown(false);\n//     }, 300);\n//     setCloseTimeout(timeout);\n//   };\n\n//   useEffect(() => {\n//     return () => {\n//       if (closeTimeout) clearTimeout(closeTimeout);\n//     };\n//   }, [closeTimeout]);\n\n//   const handleEmailSubmit = async (e) => {\n//     e.preventDefault();\n//     setEmailError('');\n    \n//     try {\n//       const response = await fetch('http://localhost:3000/api/auth/check-email', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email })\n//       });\n      \n//       const data = await response.json();\n      \n//       if (!response.ok) throw new Error(data.message || 'Network error');\n      \n//       if (data.exists) {\n//         const sessionResponse = await fetch('http://localhost:3000/api/auth/create-session', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ email })\n//         });\n//         localStorage.setItem('token', data.token);\n//         localStorage.setItem('userEmail', email);\n//         window.dispatchEvent(new Event('userLogin'));\n//         setEmailError('Welcome back!');\n//         setTimeout(() => {\n//           setShowLoginModal(false);\n//           setEmail('');\n//           navigate('/profile');\n//         }, 1500);\n//       } else {\n//         setEmailError('Email not found. Would you like to create an account?');\n//       }\n//     } catch (err) {\n//       setEmailError('Error checking email. Please try again.');\n//     }\n//   };\n\n//   const handleRecommendationSubmit = async (e) => {\n//     e.preventDefault();\n//     try {\n//       const response = await fetch('http://localhost:3000/api/recommendations', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify(recommendationForm)\n//       });\n      \n//       if (!response.ok) throw new Error('Failed to add recommendation');\n      \n//       setShowAddRecommendationModal(false);\n//       setRecommendationForm({\n//         business_name: '',\n//         email: '',\n//         phone_number: '',\n//         category: '',\n//         subcategory: '',\n//         description: '',\n//         notes: '',\n//         user_email: localStorage.getItem('userEmail')\n//       });\n//     } catch (error) {\n//       console.error('Error adding recommendation:', error);\n//     }\n//   };\n\n//   return (\n//     <header className=\"header\">\n//       <div className=\"header-content\">\n//         <Link to=\"/\" className=\"logo\">Seanag Recommends</Link>\n//         <nav className=\"nav-links\">\n//           <div \n//             className=\"nav-link dropdown\" \n//             onMouseEnter={handleMouseEnter}\n//             onMouseLeave={handleMouseLeave}\n//           >\n//             Home Services\n//             {showServicesDropdown && (\n//               <div \n//                 className=\"dropdown-menu\"\n//                 onMouseEnter={handleMouseEnter}\n//                 onMouseLeave={handleMouseLeave}\n//               >\n//                 <Link to=\"/appliances\" className=\"dropdown-item\">Appliances</Link>\n//                 <Link to=\"/cleaning\" className=\"dropdown-item\">Cleaning</Link>\n//                 <Link to=\"/utilities\" className=\"dropdown-item\">Utilities</Link>\n//                 <Link to=\"/repairs\" className=\"dropdown-item\">Repairs</Link>\n//                 <Link to=\"/outdoor\" className=\"dropdown-item\">Outdoor</Link>\n//                 <Link to=\"/moving\" className=\"dropdown-item\">Moving</Link>\n//               </div>\n//             )}\n//           </div>\n//           <Link to=\"/financial-services\" className=\"nav-link\">Financial Services</Link>\n//           <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\n//           <button \n//             className=\"login-button\" \n//             onClick={() => setShowLoginModal(true)}\n//           >\n//             Login\n//           </button>\n//           {isLoggedIn ? (\n//           <button \n//             className=\"add-recommendation-button\"\n//             onClick={() => setShowAddRecommendationModal(true)}\n//           >\n//             Add Recommendation\n//           </button>\n//         ) : (\n//           <button \n//             className=\"add-recommendation-button\"\n//             onClick={() => setShowLoginModal(true)}\n//           >\n//             Add Recommendation\n//           </button>\n//         )}\n//         </nav>\n//       </div>\n\n//       {showLoginModal && (\n//         <div className=\"modal-overlay\" onClick={() => setShowLoginModal(false)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <button \n//               className=\"close-button\" \n//               onClick={() => setShowLoginModal(false)}\n//             >\n//               ×\n//             </button>\n//             <h2>Welcome to Maven</h2>\n//             <form onSubmit={handleEmailSubmit}>\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//               {emailError && <div className=\"error-message\">{emailError}</div>}\n//               <button type=\"submit\">Continue</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n\n//       {showAddRecommendationModal && (\n//         <div className=\"modal-overlay\" onClick={() => setShowAddRecommendationModal(false)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <button \n//               className=\"close-button\" \n//               onClick={() => setShowAddRecommendationModal(false)}\n//             >\n//               ×\n//             </button>\n//             <h2>Add New Recommendation</h2>\n//             <form onSubmit={handleRecommendationSubmit}>\n//               <input\n//                 type=\"text\"\n//                 placeholder=\"Business Name\"\n//                 value={recommendationForm.business_name}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   business_name: e.target.value\n//                 })}\n//                 required\n//               />\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Business Email\"\n//                 value={recommendationForm.email}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   email: e.target.value\n//                 })}\n//                 required\n//               />\n//               <input\n//                 type=\"tel\"\n//                 placeholder=\"Phone Number\"\n//                 value={recommendationForm.phone_number}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   phone_number: e.target.value\n//                 })}\n//                 required\n//               />\n//               <textarea\n//                 placeholder=\"Description\"\n//                 value={recommendationForm.description}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   description: e.target.value\n//                 })}\n//               />\n//               <textarea\n//                 placeholder=\"Additional Notes\"\n//                 value={recommendationForm.notes}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   notes: e.target.value\n//                 })}\n//               />\n//               <select\n//                 value={recommendationForm.category}\n//                 onChange={(e) => setRecommendationForm({\n//                   ...recommendationForm,\n//                   category: e.target.value,\n//                   subcategory: ''\n//                 })}\n//                 required\n//               >\n//                 <option value=\"\">Select Category</option>\n//                 {Object.keys(categories).map(category => (\n//                   <option key={category} value={category}>{category}</option>\n//                 ))}\n//               </select>\n//               {recommendationForm.category && (\n//                 <select\n//                   value={recommendationForm.subcategory}\n//                   onChange={(e) => setRecommendationForm({\n//                     ...recommendationForm,\n//                     subcategory: e.target.value\n//                   })}\n//                   required\n//                 >\n//                   <option value=\"\">Select Subcategory</option>\n//                   {categories[recommendationForm.category].map(sub => (\n//                     <option key={sub.backend} value={sub.backend}>\n//                       {sub.name}\n//                     </option>\n//                   ))}\n//                 </select>\n//               )}\n//               <button type=\"submit\">Submit Recommendation</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </header>\n//   );\n// };\n\n// export default Header;\n\n\n// // Header.jsx\n// import React, { useState, useEffect } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './Header.css';\n\n// const Header = () => {\n//   const navigate = useNavigate();\n//   const [showLoginModal, setShowLoginModal] = useState(false);\n//   const [email, setEmail] = useState('');\n//   const [emailError, setEmailError] = useState('');\n//   const [showServicesDropdown, setShowServicesDropdown] = useState(false);\n//   const [closeTimeout, setCloseTimeout] = useState(null);\n\n//   const handleMouseEnter = () => {\n//     if (closeTimeout) clearTimeout(closeTimeout);\n//     setShowServicesDropdown(true);\n//   };\n\n//   const handleMouseLeave = () => {\n//     const timeout = setTimeout(() => {\n//       setShowServicesDropdown(false);\n//     }, 300);\n//     setCloseTimeout(timeout);\n//   };\n\n//   useEffect(() => {\n//     return () => {\n//       if (closeTimeout) clearTimeout(closeTimeout);\n//     };\n//   }, [closeTimeout]);\n\n//   const handleEmailSubmit = async (e) => {\n//     e.preventDefault();\n//     setEmailError('');\n    \n//     try {\n//       const response = await fetch('http://localhost:3000/api/auth/check-email', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email })\n//       });\n      \n//       const data = await response.json();\n      \n//       if (!response.ok) throw new Error(data.message || 'Network error');\n      \n//       if (data.exists) {\n//         const sessionResponse = await fetch('http://localhost:3000/api/auth/create-session', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ email })\n//         });\n//         localStorage.setItem('token', data.token);\n//         localStorage.setItem('userEmail', email);\n//         window.dispatchEvent(new Event('userLogin'));\n//         console.log('Token stored in localStorage:', localStorage.getItem('token'));\n//         setEmailError('Welcome back!');\n//         setTimeout(() => {\n//           setShowLoginModal(false);\n//           setEmail('');\n//           navigate('/profile');\n//         }, 1500);\n//       } \n//       else {\n//         setEmailError('Email not found. Would you like to create an account?');\n//       }\n//     } \n//     catch (err) {\n//       setEmailError('Error checking email. Please try again.');\n//     }\n//   };\n\n//   return (\n//     <header className=\"header\">\n//       <div className=\"header-content\">\n//         <Link to=\"/\" className=\"logo\">Seanag Recommends</Link>\n//         <nav className=\"nav-links\">\n//           <div \n//             className=\"nav-link dropdown\" \n//             onMouseEnter={handleMouseEnter}\n//             onMouseLeave={handleMouseLeave}\n//           >\n//             Home Services\n//             {showServicesDropdown && (\n//               <div \n//                 className=\"dropdown-menu\"\n//                 onMouseEnter={handleMouseEnter}\n//                 onMouseLeave={handleMouseLeave}\n//               >\n//                 <Link to=\"/appliances\" className=\"dropdown-item\">Appliances</Link>\n//                 <Link to=\"/cleaning\" className=\"dropdown-item\">Cleaning</Link>\n//                 <Link to=\"/utilities\" className=\"dropdown-item\">Utilities</Link>\n//                 <Link to=\"/repairs\" className=\"dropdown-item\">Repairs</Link>\n//                 <Link to=\"/outdoor\" className=\"dropdown-item\">Outdoor</Link>\n//                 <Link to=\"/moving\" className=\"dropdown-item\">Moving</Link>\n//               </div>\n//             )}\n//           </div>\n//           <Link to=\"/financial-services\" className=\"nav-link\">Financial Services</Link>\n//           <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\n//           <button \n//             className=\"login-button\" \n//             onClick={() => setShowLoginModal(true)}\n//           >\n//             Login\n//           </button>\n//         </nav>\n//       </div>\n\n//       {showLoginModal && (\n//         <div className=\"modal-overlay\" onClick={() => setShowLoginModal(false)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <button \n//               className=\"close-button\" \n//               onClick={() => setShowLoginModal(false)}\n//             >\n//               ×\n//             </button>\n//             <h2>Welcome to Maven</h2>\n//             <form onSubmit={handleEmailSubmit}>\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//               {emailError && <div className=\"error-message\">{emailError}</div>}\n//               <button type=\"submit\">Continue</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </header>\n//   );\n// };\n\n// export default Header;\n\n\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import './Header.css';\n\n// const Header = () => {\n//   console.log('Header component rendering');\n//   const navigate = useNavigate();\n//   const [showLoginModal, setShowLoginModal] = useState(false);\n//   const [email, setEmail] = useState('');\n//   const [emailError, setEmailError] = useState('');\n\n//   const handleEmailSubmit = async (e) => {\n//     e.preventDefault();\n//     setEmailError('');\n    \n//     try {\n//       const response = await fetch('http://localhost:3000/api/auth/check-email', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//         },\n//         body: JSON.stringify({ email })\n//       });\n      \n//       const data = await response.json();\n      \n//       if (!response.ok) throw new Error(data.message || 'Network error');\n      \n//       if (data.exists) {\n//         const sessionResponse = await fetch('http://localhost:3000/api/auth/create-session', {\n//           method: 'POST',\n//           headers: {\n//             'Content-Type': 'application/json',\n//           },\n//           body: JSON.stringify({ email })\n//         });\n//         localStorage.setItem('token', data.token);\n//         localStorage.setItem('userEmail', email);\n//         window.dispatchEvent(new Event('userLogin'));\n//         console.log('Token stored in localStorage:', localStorage.getItem('token'));\n//         setEmailError('Welcome back!');\n//         setTimeout(() => {\n//           setShowLoginModal(false);\n//           setEmail('');\n//           navigate('/profile');\n//         }, 1500);\n//       } \n//       else {\n//         setEmailError('Email not found. Would you like to create an account?');\n//       }\n//     } \n//     catch (err) {\n//       setEmailError('Error checking email. Please try again.');\n//     }\n//   };\n\n//   const handleFinancialServicesClick = () => {\n//     console.log('Financial Services link clicked');\n//     navigate('/financial-services');\n//   };\n\n//   return (\n//     <header className=\"header\">\n//       <div className=\"header-content\">\n//         <Link to=\"/\" className=\"logo\">Seanag Recommends</Link>\n//         <nav className=\"nav-links\">\n//           <Link to=\"/home-services\" onClick={() => console.log('Home Services clicked')}>\n//             Home Services\n//           </Link>\n//           <Link \n//             to=\"/financial-services\" \n//             onClick={handleFinancialServicesClick}\n//             className=\"nav-link\"\n//           >\n//             Financial Services\n//           </Link>\n//           <Link to=\"/profile\" className=\"nav-link\">Profile</Link>\n//           <button \n//             className=\"login-button\" \n//             onClick={() => setShowLoginModal(true)}\n//           >\n//             Login\n//           </button>\n//         </nav>\n//       </div>\n\n//       {showLoginModal && (\n//         <div className=\"modal-overlay\" onClick={() => setShowLoginModal(false)}>\n//           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n//             <button \n//               className=\"close-button\" \n//               onClick={() => setShowLoginModal(false)}\n//             >\n//               ×\n//             </button>\n//             <h2>Welcome to Maven</h2>\n//             <form onSubmit={handleEmailSubmit}>\n//               <input\n//                 type=\"email\"\n//                 placeholder=\"Enter your email\"\n//                 value={email}\n//                 onChange={(e) => setEmail(e.target.value)}\n//                 required\n//               />\n//               {emailError && <div className=\"error-message\">{emailError}</div>}\n//               <button type=\"submit\">Continue</button>\n//             </form>\n//           </div>\n//         </div>\n//       )}\n//     </header>\n//   );\n// };\n\n// export default Header;\n\n// // // Header.js\n// // import React, { useState } from 'react';\n// // import { Link } from 'react-router-dom';\n// // import './Header.css';\n\n// // const Header = () => {\n// //   console.log('Header component rendering');\n// //   const [showLoginModal, setShowLoginModal] = useState(false);\n// //   const [email, setEmail] = useState('');\n// //   const [emailError, setEmailError] = useState('');\n\n// //   const handleEmailSubmit = async (e) => {\n// //     e.preventDefault();\n// //     setEmailError('');\n    \n// //     try {\n// //       const response = await fetch('http://localhost:3000/api/auth/check-email', {\n// //         method: 'POST',\n// //         headers: {\n// //           'Content-Type': 'application/json',\n// //         },\n// //         body: JSON.stringify({ email })\n// //       });\n      \n// //       const data = await response.json();\n      \n// //       if (!response.ok) throw new Error(data.message || 'Network error');\n      \n// //       if (data.exists) {\n// //         setEmailError('Welcome back!');\n// //         setTimeout(() => {\n// //           setShowLoginModal(false);\n// //           setEmail('');\n// //         }, 1500);\n// //       } else {\n// //         setEmailError('Email not found. Would you like to create an account?');\n// //       }\n// //     } catch (err) {\n// //       setEmailError('Error checking email. Please try again.');\n// //     }\n// //   };\n\n// //   return (\n// //     <header className=\"header\">\n// //       <div className=\"header-content\">\n// //         <Link to=\"/\" className=\"logo\">Maven</Link>\n// //         <nav className=\"nav-links\">\n// //           <Link to=\"/home-services\">Home Services</Link>\n// //           <Link to=\"/financial-services\">Financial Services</Link>\n// //           <button \n// //             className=\"login-button\" \n// //             onClick={() => setShowLoginModal(true)}\n// //           >\n// //             Login\n// //           </button>\n// //         </nav>\n// //       </div>\n\n// //       {showLoginModal && (\n// //         <div className=\"modal-overlay\" onClick={() => setShowLoginModal(false)}>\n// //           <div className=\"modal\" onClick={e => e.stopPropagation()}>\n// //             <button \n// //               className=\"close-button\" \n// //               onClick={() => setShowLoginModal(false)}\n// //             >\n// //               ×\n// //             </button>\n// //             <h2>Welcome to Maven</h2>\n// //             <form onSubmit={handleEmailSubmit}>\n// //               <input\n// //                 type=\"email\"\n// //                 placeholder=\"Enter your email\"\n// //                 value={email}\n// //                 onChange={(e) => setEmail(e.target.value)}\n// //                 required\n// //               />\n// //               {emailError && <div className=\"error-message\">{emailError}</div>}\n// //               <button type=\"submit\">Continue</button>\n// //             </form>\n// //           </div>\n// //         </div>\n// //       )}\n// //     </header>\n// //   );\n// // };\n\n// // export default Header;","const API_URL = process.env.NODE_ENV === 'production' \n  ? 'https://maven.pages.dev/api'\n  : 'http://localhost:3000/api';\n\n// const API_URL = 'http://localhost:3000/api';\n\nexport const fetchProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/providers`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchApplianceProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/applianceProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch appliance providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchCleaningProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/cleaningProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch cleaning providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchUtilitiesProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/utilitiesProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch utilities providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchRepairProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/repairProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch repair providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchOutdoorProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/outdoorProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch outdoor providers:', error);\n    throw error;\n  }\n};\n\nexport const fetchMovingProviders = async () => {\n  try {\n    const response = await fetch(`${API_URL}/movingProviders`, {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      mode: 'cors'\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n    \n    const data = await response.json();\n    return data;\n    \n  } catch (error) {\n    console.error('Failed to fetch moving providers:', error);\n    throw error;\n  }\n};\n\n\n// // services/providerService.js\n// const API_URL = 'http://localhost:3000/api';\n\n// export const fetchProviders = async () => {\n//   try {\n//     console.log('Fetching providers from:', `${API_URL}/providers`);\n    \n//     const response = await fetch(`${API_URL}/providers`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'  // Enable CORS\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchApplianceProviders = async () => {\n//   try {\n//     console.log('Fetching appliance providers from:', `${API_URL}/applianceProviders`);\n    \n//     const response = await fetch(`${API_URL}/applianceProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Appliance provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch appliance providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchCleaningProviders = async () => {\n//   try {\n//     console.log('Fetching cleaning providers from:', `${API_URL}/cleaningProviders`);\n    \n//     const response = await fetch(`${API_URL}/cleaningProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Cleaning provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch cleaning providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchUtilitiesProviders = async () => {\n//   try {\n//     console.log('Fetching utilities providers from:', `${API_URL}/utilitiesProviders`);\n    \n//     const response = await fetch(`${API_URL}/utilitiesProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Utilities provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch utilities providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchRepairProviders = async () => {\n//   try {\n//     console.log('Fetching repair providers from:', `${API_URL}/repairProviders`);\n    \n//     const response = await fetch(`${API_URL}/repairProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Repair provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch repair providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchOutdoorProviders = async () => {\n//   try {\n//     console.log('Fetching outdoor providers from:', `${API_URL}/outdoorProviders`);\n    \n//     const response = await fetch(`${API_URL}/outdoorProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Outdoor provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch outdoor providers:', error);\n//     throw error;\n//   }\n// };\n\n// export const fetchMovingProviders = async () => {\n//   try {\n//     console.log('Fetching moving providers from:', `${API_URL}/movingProviders`);\n    \n//     const response = await fetch(`${API_URL}/movingProviders`, {\n//       method: 'GET',\n//       headers: {\n//         'Accept': 'application/json',\n//         'Content-Type': 'application/json'\n//       },\n//       mode: 'cors'\n//     });\n\n//     if (!response.ok) {\n//       console.error('Response not OK:', response.status, response.statusText);\n//       throw new Error(`HTTP error! status: ${response.status}`);\n//     }\n    \n//     const data = await response.json();\n//     console.log('Moving provider data received:', data);\n//     return data;\n    \n//   } catch (error) {\n//     console.error('Failed to fetch moving providers:', error);\n//     throw error;\n//   }\n// };\n\n\n// // const API_BASE_URL = process.env.REACT_APP_API_BASE_URL || 'http://localhost:3000/api';\n\n// // export const fetchProviders = async () => {\n// //   console.log('fetchProviders function called');\n// //   console.log('Using API URL:', `${API_BASE_URL}/providers`);\n\n// //   try {\n// //     console.log('Starting fetch request...');\n// //     const response = await fetch(`${API_BASE_URL}/providers`, {\n// //       method: 'GET',\n// //       headers: {\n// //         'Accept': 'application/json',\n// //         'Content-Type': 'application/json',\n// //       },\n// //       credentials: 'include'\n// //     });\n    \n// //     console.log('Response received:', {\n// //       status: response.status,\n// //       statusText: response.statusText,\n// //       headers: Object.fromEntries(response.headers.entries())\n// //     });\n\n// //     if (!response.ok) {\n// //       throw new Error(`HTTP error! status: ${response.status}`);\n// //     }\n\n// //     const data = await response.json();\n// //     console.log('Raw data received:', data);\n\n// //     const mappedData = data.map(provider => ({\n// //       id: provider.id,\n// //       business_name: provider.business_name,\n// //       role: provider.description,\n// //       service_type: provider.service_type,\n// //       recommended_by_name: provider.recommended_by_name\n// //     }));\n\n// //     console.log('Mapped data:', mappedData);\n// //     return mappedData;\n\n// //   } catch (error) {\n// //     console.error('Detailed error information:', {\n// //       message: error.message,\n// //       stack: error.stack,\n// //       name: error.name\n// //     });\n// //     throw error;\n// //   }\n// // };\n\n\n// // export const fetchProviders = async () => {\n// //     try {\n// //       const response = await fetch('/api/providers');\n// //       console.log('API Response:', response);\n// //       const data = await response.json();\n// //       console.log('Parsed API data:', data);\n// //       return data;\n// //     } catch (error) {\n// //       console.error('Fetch error:', error);\n// //       throw error;\n// //     }\n// //   };\n\n\n\n// // const API_URL = process.env.REACT_APP_API_URL || 'http://localhost:3001';\n\n// // export const fetchProviders = async () => {\n// //   try {\n// //     const response = await fetch(`${API_URL}/api/providers/financial`);\n// //     if (!response.ok) {\n// //       throw new Error('Network response was not ok');\n// //     }\n// //     return await response.json();\n// //   } catch (error) {\n// //     console.error('Error fetching providers:', error);\n// //     throw error;\n// //   }\n// // };\n\n// // services/providerService.js\n// // export const fetchProviders = async () => {\n// //     // Mock data for testing\n// //     return [\n// //       {\n// //         id: '1',\n// //         business_name: 'Mike Makker',\n// //         role: 'CPA, CGMA',\n// //         service_type: 'Tax Preparation',\n// //         recommended_by_name: 'Mani Sundaram'\n// //       }\n// //     ];\n// //   };\n\n// // services/providerService.js\n// // export const fetchProviders = async () => {\n// //     try {\n// //       const response = await fetch('/api/providers');\n// //       if (!response.ok) {\n// //         throw new Error('Network response was not ok');\n// //       }\n// //       return await response.json();\n// //     } catch (error) {\n// //       throw new Error('Failed to fetch providers: ' + error.message);\n// //     }\n// //   };\n\n// // export const fetchProviders = async () => {\n// //     try {\n// //       const response = await fetch('/api/routes/providers');\n// //       if (!response.ok) {\n// //         throw new Error(`HTTP error! status: ${response.status}`);\n// //       }\n// //       const data = await response.json();\n// //       return data.map(provider => ({\n// //         id: provider.id,\n// //         business_name: provider.business_name,\n// //         role: provider.description,\n// //         service_type: provider.service_type,\n// //         recommended_by_name: provider.recommended_by_name\n// //       }));\n// //     } catch (error) {\n// //       throw new Error('Failed to fetch providers: ' + error.message);\n// //     }\n// //   };\n  \n  \n","// FinancialServices.js\nimport React, { useState, useEffect } from 'react';\nimport { FaComment, FaHeart, FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchProviders } from '../../services/providerService';\nimport CommentModal from '../../components/CommentModal/CommentModal';\nimport './FinancialServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst FinancialServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const [selectedCategory, setSelectedCategory] = useState('all');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n  const [likedProviders, setLikedProviders] = useState(new Set());\n  const [isCommentModalOpen, setIsCommentModalOpen] = useState(false);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchProviders();\n        setProviders(data);\n  \n        // Get current user's likes\n        const userEmail = localStorage.getItem('userEmail');\n        if (userEmail) {\n          const likesResponse = await fetch('http://localhost:3000/api/reviews/user-likes', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({ email: userEmail })\n          });\n          const likedData = await likesResponse.json();\n          setLikedProviders(new Set(likedData.map(like => like.provider_id)));\n        }\n  \n        const uniqueCategories = [...new Set(data.map(provider => \n          provider.service_type))];\n        setCategories(uniqueCategories);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n  \n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) {\n      console.error('No provider selected');\n      return;\n    }\n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to submit review');\n      }\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n  \n\n  const handleLike = async (providerId, providerEmail) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!userEmail) {\n      alert('Please log in to like this provider');\n      return;\n    }\n  \n    const isCurrentlyLiked = likedProviders.has(providerId);\n  \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: isCurrentlyLiked ? 'DELETE' : 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: providerId,\n          provider_email: providerEmail,\n          email: userEmail,\n          rating: 1,\n          content: isCurrentlyLiked ? 'Unliked' : 'Liked'\n        })\n      });\n  \n      if (response.ok) {\n        setLikedProviders(prev => {\n          const newSet = new Set(prev);\n          if (isCurrentlyLiked) {\n            newSet.delete(providerId);\n          } else {\n            newSet.add(providerId);\n          }\n          return newSet;\n        });\n  \n        setProviders(providers.map(p => \n          p.id === providerId \n            ? { \n                ...p, \n                num_likes: isCurrentlyLiked \n                  ? (p.num_likes || 1) - 1 \n                  : (p.num_likes || 0) + 1 \n              }\n            : p\n        ));\n      }\n    } catch (error) {\n      console.error('Error handling like:', error);\n    }\n  };  \n  \n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) {\n      window.location.href = `tel:${phoneNumber}`;\n    }\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) {\n      window.location.href = `mailto:${email}`;\n    }\n  };\n\n  const filteredProviders = selectedCategory === 'all' \n    ? providers \n    : providers.filter(provider => provider.service_type === selectedCategory);\n\n  if (loading) {\n    return <div className=\"loading-spinner\">Loading...</div>;\n  }\n  if (error) {\n    return <div className=\"error-message\">Error: {error}</div>;\n  }\n  if (providers.length === 0) {\n    return <div className=\"no-data\">No providers found</div>;\n  }\n\n  return (\n    <div className=\"financial-services-container\">\n      <div className=\"category-tabs\">\n        <button \n          className={`tab ${selectedCategory === 'all' ? 'active' : ''}`}\n          onClick={() => setSelectedCategory('all')}\n        >\n          All Services\n        </button>\n        {categories.map(category => (\n          <button\n            key={category}\n            className={`tab ${selectedCategory === category ? 'active' : ''}`}\n            onClick={() => setSelectedCategory(category)}\n          >\n            {category}\n          </button>\n        ))}\n      </div>\n      <div className=\"providers-grid\">\n        {filteredProviders.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                <div className=\"contact-icons\">\n                {provider.phone_number?.trim() && (\n                    <FaPhone \n                    className=\"contact-icon phone-icon\" \n                    size={16} \n                    onClick={() => handlePhoneClick(provider.phone_number)}\n                    title=\"Call provider\"\n                    />\n                )}\n                {provider.email?.trim() && (\n                    <FaEnvelope \n                        className=\"contact-icon email-icon\" \n                        size={16}\n                        onClick={() => handleEmailClick(provider.email)}\n                        title=\"Email provider\"\n                    />\n                )}\n                </div>\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                    Recommended by: {provider.recommended_by_name}\n                    <div className=\"comment-section\">\n                    {/* <FaComment \n                        className=\"comment-icon\"\n                        onClick={() => {\n                        setSelectedProvider(provider);\n                        setIsCommentModalOpen(true);\n                        }}\n                        size={16}\n                    /> */}\n                    {/* <span className=\"comment-count\">\n                        {provider.review_count || 0}\n                    </span> */}\n                    </div>\n                    {/* <span className=\"like-container\">\n                    <FaHeart \n                        className={`heart-icon ${likedProviders.has(provider.id) ? 'liked' : ''}`}\n                        onClick={() => handleLike(provider.id, provider.email)}\n                        size={16}\n                    />\n                    <span className=\"like-count\">{provider.num_likes || 0}</span>\n                    </span> */}\n                </div>\n            </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n            isOpen={isReviewModalOpen}\n            onClose={() => setIsReviewModalOpen(false)}\n            onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n            })}\n            provider={selectedProvider}\n        />\n        )}\n        {/* {isCommentModalOpen && (\n        <CommentModal\n          isOpen={isCommentModalOpen}\n          onClose={() => setIsCommentModalOpen(false)}\n          provider={selectedProvider}\n        />\n      )} */}\n    </div>\n  );\n};\n\nexport default FinancialServices;\n\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport './ApplianceServices.css';\n\nconst API_URL = process.env.NODE_ENV === 'production' \n  ? 'https://maven.pages.dev/api'\n  : 'http://localhost:3000/api';\n  \n// const API_URL = process.env.NODE_ENV === 'production' \n//   ? '/api'\n//   : 'http://localhost:3000/api';\n// const API_URL = 'http://localhost:3000';\n// const API_URL = 'http://localhost:3000/api';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst ApplianceServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const response = await fetch(`${API_URL}/applianceProviders`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch providers');\n        }\n        const data = await response.json();\n        setProviders(data);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch(`${API_URL}/reviews`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No appliance service providers found</div>;\n\n  return (\n    <div className=\"appliance-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default ApplianceServices;\n\n\n// import React, { useState, useEffect } from 'react';\n// import { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\n// import { fetchApplianceProviders } from '../../services/providerService';\n// import './ApplianceServices.css';\n\n// const ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n//   const [rating, setRating] = useState(0);\n//   const [hover, setHover] = useState(0);\n//   const [review, setReview] = useState('');\n//   const [error, setError] = useState('');\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     if (!rating) {\n//       setError('Please select a rating');\n//       return;\n//     }\n//     onSubmit({ rating, review });\n//     setRating(0);\n//     setReview('');\n//     onClose();\n//   };\n\n//   if (!isOpen) return null;\n\n//   return (\n//     <div className=\"modal-overlay\">\n//       <div className=\"modal-content\">\n//         <h2>Review {provider.business_name}</h2>\n//         <form onSubmit={handleSubmit}>\n//           <div className=\"rating-container\">\n//             <label>Rate your experience: <span className=\"required\">*</span></label>\n//             <div className=\"stars\">\n//               {[...Array(5)].map((_, index) => (\n//                 <FaStar\n//                   key={index}\n//                   className={index < (hover || rating) ? 'star active' : 'star'}\n//                   onClick={() => setRating(index + 1)}\n//                   onMouseEnter={() => setHover(index + 1)}\n//                   onMouseLeave={() => setHover(rating)}\n//                 />\n//               ))}\n//             </div>\n//             {error && <div className=\"error-message\">{error}</div>}\n//           </div>\n//           <div className=\"review-input\">\n//             <label>Tell us about your experience:</label>\n//             <textarea\n//               value={review}\n//               onChange={(e) => setReview(e.target.value)}\n//               placeholder=\"Optional: Share your thoughts...\"\n//               rows={4}\n//             />\n//           </div>\n//           <div className=\"modal-buttons\">\n//             <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n//               Cancel\n//             </button>\n//             <button type=\"submit\" className=\"submit-button\">\n//               Submit Review\n//             </button>\n//           </div>\n//         </form>\n//       </div>\n//     </div>\n//   );\n// };\n\n// const ApplianceServices = () => {\n//   const [providers, setProviders] = useState([]);\n//   const [loading, setLoading] = useState(true);\n//   const [error, setError] = useState(null);\n//   const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n//   const [selectedProvider, setSelectedProvider] = useState(null);\n\n//   useEffect(() => {\n//     const getProviders = async () => {\n//       try {\n//         setLoading(true);\n//         const data = await fetchApplianceProviders();\n//         const applianceProviders = data.filter(\n//           provider => provider.service_type === 'Appliance Services'\n//         );\n//         setProviders(applianceProviders);\n//       } catch (err) {\n//         setError('Failed to fetch providers');\n//         console.error('Error:', err);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     getProviders();\n//   }, []);\n\n//   const handleReviewSubmit = async (reviewData) => {\n//     const userEmail = localStorage.getItem('userEmail');\n//     if (!selectedProvider) return;\n    \n//     try {\n//       const response = await fetch('http://localhost:3000/api/reviews', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json'\n//         },\n//         body: JSON.stringify({\n//           provider_id: selectedProvider.id,\n//           provider_email: reviewData.providerEmail,\n//           email: userEmail,\n//           rating: reviewData.rating,\n//           content: reviewData.review\n//         })\n//       });\n\n//       if (!response.ok) throw new Error('Failed to submit review');\n//     } catch (err) {\n//       console.error('Error submitting review:', err);\n//     }\n//   };\n\n//   const handlePhoneClick = (phoneNumber) => {\n//     if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n//   };\n\n//   const handleEmailClick = (email) => {\n//     if (email) window.location.href = `mailto:${email}`;\n//   };\n\n//   if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n//   if (error) return <div className=\"error-message\">Error: {error}</div>;\n//   if (providers.length === 0) return <div className=\"no-data\">No appliance service providers found</div>;\n\n//   return (\n//     <div className=\"appliance-services-container\">\n//       <div className=\"category-tabs\">\n//         <button className=\"tab active\">\n//           All Services\n//         </button>\n//       </div>\n//       <div className=\"providers-grid\">\n//         {providers.map(provider => (\n//           <div className=\"financial-service-card\" key={provider.id}>\n//             <div className=\"card-content\">\n//               <div className=\"card-header\">\n//                 <h2 className=\"card-title\">{provider.business_name}</h2>\n//                 <div className=\"contact-icons\">\n//                   {provider.phone_number?.trim() && (\n//                     <FaPhone \n//                       className=\"contact-icon phone-icon\"\n//                       size={16}\n//                       onClick={() => handlePhoneClick(provider.phone_number)}\n//                       title=\"Call provider\"\n//                     />\n//                   )}\n//                   {provider.email?.trim() && (\n//                     <FaEnvelope \n//                       className=\"contact-icon email-icon\"\n//                       size={16}\n//                       onClick={() => handleEmailClick(provider.email)}\n//                       title=\"Email provider\"\n//                     />\n//                   )}\n//                 </div>\n//               </div>\n//               <div className=\"card-subtitle\">{provider.role}</div>\n//               <div className=\"card-service-type\">{provider.service_type}</div>\n//               <div className=\"card-description\">{provider.description}</div>\n//               <div className=\"recommended-section\">\n//                 <div className=\"recommended-by\">\n//                   Recommended by: {provider.recommended_by_name}\n//                 </div>\n//               </div>\n//               <button \n//                 className=\"service-button\"\n//                 onClick={() => {\n//                   setSelectedProvider(provider);\n//                   setIsReviewModalOpen(true);\n//                 }}\n//               >\n//                 Have you used this service?\n//               </button>\n//             </div>\n//           </div>\n//         ))}\n//       </div>\n//       {isReviewModalOpen && (\n//         <ReviewModal\n//           isOpen={isReviewModalOpen}\n//           onClose={() => setIsReviewModalOpen(false)}\n//           onSubmit={(reviewData) => handleReviewSubmit({\n//             ...reviewData,\n//             providerEmail: selectedProvider.email\n//           })}\n//           provider={selectedProvider}\n//         />\n//       )}\n//     </div>\n//   );\n// };\n\n// export default ApplianceServices;\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchCleaningProviders } from '../../services/providerService';\nimport './CleaningServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst CleaningServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchCleaningProviders();\n        const cleaningProviders = data.filter(\n          provider => provider.service_type === 'Cleaning and Upkeep'\n        );\n        setProviders(cleaningProviders);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No cleaning service providers found</div>;\n\n  return (\n    <div className=\"cleaning-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default CleaningServices;\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchUtilitiesProviders } from '../../services/providerService';\nimport './UtilitiesServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst UtilitiesServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchUtilitiesProviders();\n        const utilitiesProviders = data.filter(\n          provider => provider.service_type.toLowerCase().includes('utilities')\n        );\n        setProviders(utilitiesProviders);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No utilities service providers found</div>;\n\n  return (\n    <div className=\"utilities-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default UtilitiesServices;\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchRepairProviders } from '../../services/providerService';\nimport './RepairServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst RepairServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchRepairProviders();\n        const repairProviders = data.filter(\n            provider => provider.service_type === 'Structural Repairs'\n          );\n        setProviders(repairProviders);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No repair service providers found</div>;\n\n  return (\n    <div className=\"repair-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default RepairServices;\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchOutdoorProviders } from '../../services/providerService';\nimport './OutdoorServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst OutdoorServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchOutdoorProviders();\n        const outdoorProviders = data.filter(\n            provider => provider.service_type === 'Outdoor Services'\n          );\n        setProviders(outdoorProviders);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No outdoor service providers found</div>;\n\n  return (\n    <div className=\"outdoor-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default OutdoorServices;\n","import React, { useState, useEffect } from 'react';\nimport { FaPhone, FaEnvelope, FaStar } from 'react-icons/fa';\nimport { fetchMovingProviders } from '../../services/providerService';\nimport './MovingServices.css';\n\nconst ReviewModal = ({ isOpen, onClose, onSubmit, provider }) => {\n  const [rating, setRating] = useState(0);\n  const [hover, setHover] = useState(0);\n  const [review, setReview] = useState('');\n  const [error, setError] = useState('');\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!rating) {\n      setError('Please select a rating');\n      return;\n    }\n    onSubmit({ rating, review });\n    setRating(0);\n    setReview('');\n    onClose();\n  };\n\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2>Review {provider.business_name}</h2>\n        <form onSubmit={handleSubmit}>\n          <div className=\"rating-container\">\n            <label>Rate your experience: <span className=\"required\">*</span></label>\n            <div className=\"stars\">\n              {[...Array(5)].map((_, index) => (\n                <FaStar\n                  key={index}\n                  className={index < (hover || rating) ? 'star active' : 'star'}\n                  onClick={() => setRating(index + 1)}\n                  onMouseEnter={() => setHover(index + 1)}\n                  onMouseLeave={() => setHover(rating)}\n                />\n              ))}\n            </div>\n            {error && <div className=\"error-message\">{error}</div>}\n          </div>\n          <div className=\"review-input\">\n            <label>Tell us about your experience:</label>\n            <textarea\n              value={review}\n              onChange={(e) => setReview(e.target.value)}\n              placeholder=\"Optional: Share your thoughts...\"\n              rows={4}\n            />\n          </div>\n          <div className=\"modal-buttons\">\n            <button type=\"button\" onClick={onClose} className=\"cancel-button\">\n              Cancel\n            </button>\n            <button type=\"submit\" className=\"submit-button\">\n              Submit Review\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nconst MovingServices = () => {\n  const [providers, setProviders] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [isReviewModalOpen, setIsReviewModalOpen] = useState(false);\n  const [selectedProvider, setSelectedProvider] = useState(null);\n\n  useEffect(() => {\n    const getProviders = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchMovingProviders();\n        const movingProviders = data.filter(\n            provider => provider.service_type === 'Moving and Misc'\n          );\n        setProviders(movingProviders);\n      } catch (err) {\n        setError('Failed to fetch providers');\n        console.error('Error:', err);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    getProviders();\n  }, []);\n\n  const handleReviewSubmit = async (reviewData) => {\n    const userEmail = localStorage.getItem('userEmail');\n    if (!selectedProvider) return;\n    \n    try {\n      const response = await fetch('http://localhost:3000/api/reviews', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          provider_id: selectedProvider.id,\n          provider_email: reviewData.providerEmail,\n          email: userEmail,\n          rating: reviewData.rating,\n          content: reviewData.review\n        })\n      });\n\n      if (!response.ok) throw new Error('Failed to submit review');\n    } catch (err) {\n      console.error('Error submitting review:', err);\n    }\n  };\n\n  const handlePhoneClick = (phoneNumber) => {\n    if (phoneNumber) window.location.href = `tel:${phoneNumber}`;\n  };\n\n  const handleEmailClick = (email) => {\n    if (email) window.location.href = `mailto:${email}`;\n  };\n\n  if (loading) return <div className=\"loading-spinner\">Loading...</div>;\n  if (error) return <div className=\"error-message\">Error: {error}</div>;\n  if (providers.length === 0) return <div className=\"no-data\">No moving service providers found</div>;\n\n  return (\n    <div className=\"moving-services-container\">\n      <div className=\"category-tabs\">\n        <button className=\"tab active\">\n          All Services\n        </button>\n      </div>\n      <div className=\"providers-grid\">\n        {providers.map(provider => (\n          <div className=\"financial-service-card\" key={provider.id}>\n            <div className=\"card-content\">\n              <div className=\"card-header\">\n                <h2 className=\"card-title\">{provider.business_name}</h2>\n                <div className=\"contact-icons\">\n                  {provider.phone_number?.trim() && (\n                    <FaPhone \n                      className=\"contact-icon phone-icon\"\n                      size={16}\n                      onClick={() => handlePhoneClick(provider.phone_number)}\n                      title=\"Call provider\"\n                    />\n                  )}\n                  {provider.email?.trim() && (\n                    <FaEnvelope \n                      className=\"contact-icon email-icon\"\n                      size={16}\n                      onClick={() => handleEmailClick(provider.email)}\n                      title=\"Email provider\"\n                    />\n                  )}\n                </div>\n              </div>\n              <div className=\"card-subtitle\">{provider.role}</div>\n              <div className=\"card-service-type\">{provider.service_type}</div>\n              <div className=\"card-description\">{provider.description}</div>\n              <div className=\"recommended-section\">\n                <div className=\"recommended-by\">\n                  Recommended by: {provider.recommended_by_name}\n                </div>\n              </div>\n              <button \n                className=\"service-button\"\n                onClick={() => {\n                  setSelectedProvider(provider);\n                  setIsReviewModalOpen(true);\n                }}\n              >\n                Have you used this service?\n              </button>\n            </div>\n          </div>\n        ))}\n      </div>\n      {isReviewModalOpen && (\n        <ReviewModal\n          isOpen={isReviewModalOpen}\n          onClose={() => setIsReviewModalOpen(false)}\n          onSubmit={(reviewData) => handleReviewSubmit({\n            ...reviewData,\n            providerEmail: selectedProvider.email\n          })}\n          provider={selectedProvider}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default MovingServices;\n","import React from 'react';\nimport { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\nimport Home from './pages/Home/Home';\nimport Profile from './pages/Profile/Profile';\nimport ServiceDetails from './pages/ServiceDetails/ServiceDetails';\nimport Header from './components/Header/Header';\nimport FinancialServices from './pages/FinancialServices/FinancialServices';\nimport ApplianceServices from './pages/ApplianceServices/ApplianceServices';\nimport CleaningServices from './pages/CleaningServices/CleaningServices';\nimport UtilitiesServices from './pages/UtilitiesServices/UtilitiesServices';\nimport RepairServices from './pages/RepairServices/RepairServices';\nimport OutdoorServices from './pages/OutdoorServices/OutdoorServices';\nimport MovingServices from './pages/MovingServices/MovingServices';\nimport './styles/global.css';\n\nconst App = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <main>\n          <Routes>\n            <Route path=\"/\" element={<Home />} />\n            <Route path=\"/providers/:id\" element={<ServiceDetails />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route \n              path=\"/financial-services\" \n              element={<FinancialServices />} \n            />\n            <Route path=\"/appliances\" element={<ApplianceServices />} />\n            <Route path=\"/cleaning\" element={<CleaningServices />} />\n            <Route path=\"/utilities\" element={<UtilitiesServices />} />\n            <Route path=\"/repairs\" element={<RepairServices />} />\n            <Route path=\"/outdoor\" element={<OutdoorServices />} />\n            <Route path=\"/moving\" element={<MovingServices />} />\n          </Routes>\n        </main>\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n\n\n\n// import React from 'react';\n// import { Route, BrowserRouter as Router, Routes } from 'react-router-dom';\n// import Home from './pages/Home/Home';\n// import Profile from './pages/Profile/Profile';\n// import ServiceDetails from './pages/ServiceDetails/ServiceDetails';\n// import Header from './components/Header/Header';\n// import FinancialServices from './pages/FinancialServices/FinancialServices';\n// import './styles/global.css';\n\n// const App = () => {\n//   return (\n//     <Router>\n//       <div className=\"App\">\n//         <Header />\n//         <main>\n//           <Routes>\n//             <Route path=\"/\" element={<Home />} />\n//             <Route path=\"/providers/:id\" element={<ServiceDetails />} />\n//             <Route path=\"/profile\" element={<Profile />} />\n//             <Route path=\"/financial-services\" element={<FinancialServices />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </Router>\n//   );\n// };\n\n// export default App;\n","import React from 'react';\nimport { createRoot } from 'react-dom/client';\nimport App from './App';\nimport './styles/global.css';\n\nconst root = createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);"],"sourceRoot":""}